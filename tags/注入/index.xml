<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>注入 on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/tags/%E6%B3%A8%E5%85%A5/</link>
    <description>Recent content in 注入 on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Wed, 04 Nov 2015 15:03:28 +0800</lastBuildDate><atom:link href="https://lcx.cc/tags/%E6%B3%A8%E5%85%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>讨论：网站遇黑阔，求分析思路查身份～逆向追踪黑客、溯源分析</title>
      <link>https://lcx.cc/post/4579/</link>
      <pubDate>Wed, 04 Nov 2015 15:03:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4579/</guid>
      <description>网站遇黑阔，求分析思路查身份～ zone | 2015-11-03 00:04 朋友的一个刷单平台最近遇到一黑阔，损失了不少，找我帮忙，也没啥好主意，唉~_~ 各位大神快来给点建议分析</description>
    </item>
    
    <item>
      <title>黑盒测试中那些&#34;看不见的&#34;漏洞</title>
      <link>https://lcx.cc/post/4573/</link>
      <pubDate>Sun, 27 Sep 2015 10:01:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4573/</guid>
      <description>黑盒测试中那些&#34;看不见的&#34;漏洞 小饼仔 | 2015-09-16 17:01 原文：Hunting Asynchronous Vulnerabilities 简单翻译下大致意思 在黑盒测试中，一般我们通过请求的响应来判断一个漏洞是否存</description>
    </item>
    
    <item>
      <title>python延迟注入</title>
      <link>https://lcx.cc/post/4566/</link>
      <pubDate>Thu, 10 Sep 2015 15:26:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4566/</guid>
      <description>#!/usr/bin/env python # -*- coding: utf-8 -*- # 延迟注入工具 import urllib2 import time import socket import threading import requests class my_threading(threading.Thread): def __init__(self, str,x): threading.Thread.__init__(self) self.str = str self.x = x def run(self): global res x=self.x j = self.str url = &#34;http://localhost/demo/1.php?username=root&#39;+and+if%281=%28mid%28lpad%28bin%28ord%28mid%28%28select%20user()%29,&#34; + str(x) + &#34;,1%29%29%29,8,0%29,&#34;+ str(j) + &#34;,1%29%29,sleep%282%29,0%29%23&#34; html = request(url) verify = &#39;timeout&#39; if verify not in html: res[str(j)] = 0 #print 1</description>
    </item>
    
    <item>
      <title>一条短信控制你的手机！Android平台的SQL注入漏洞浅析</title>
      <link>https://lcx.cc/post/4518/</link>
      <pubDate>Mon, 13 Apr 2015 12:50:49 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4518/</guid>
      <description>博文作者：Gmxp 发布日期：2015-03-23 博文内容： 0x0前言 14年11月笔者在百度xteam博客中看到其公开了此前报告给Google</description>
    </item>
    
    <item>
      <title>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.)</title>
      <link>https://lcx.cc/post/4507/</link>
      <pubDate>Tue, 24 Mar 2015 15:28:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4507/</guid>
      <description>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.) Ricter (๑`･ᴗ･´๑) | 2015-03-22 23:55 https://github.com/RicterZ/websocket-injection Installation git clone https://github.com/RicterZ/websocket-injection cd websocket-injection pip install -r requirements.txt Usage python main.py --port=8888 python sqlmap.py -u &#34;http://localhost:8888/?url=[target]&amp;amp;data=[sqli]&#34; -p data MIT 各种求 star ~ [原文地址]</description>
    </item>
    
    <item>
      <title>Betster SQL注入漏洞</title>
      <link>https://lcx.cc/post/4502/</link>
      <pubDate>Mon, 16 Mar 2015 14:49:42 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4502/</guid>
      <description>Betster（又名PHP Betoffice）是一套用于创建基于PHP、MySQL和JavaScript的在线赌场软件。 Betster 1.0.4版本中存</description>
    </item>
    
    <item>
      <title>Android app 端的 sql 注入</title>
      <link>https://lcx.cc/post/4462/</link>
      <pubDate>Tue, 16 Dec 2014 15:51:16 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4462/</guid>
      <description>前言： 最近入门开始玩android的安全，但是国内研究的真的很少，国外有本牛逼的书《Android Hacker&#39;s Handbook》，写的不错，但是看着睡</description>
    </item>
    
    <item>
      <title>Putty的噩梦 — 渗透工具PuttyRider使用心得分享</title>
      <link>https://lcx.cc/post/4460/</link>
      <pubDate>Fri, 12 Dec 2014 18:08:29 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4460/</guid>
      <description>Putty的噩梦——渗透工具PuttyRider使用心得分享 我们在入侵到一台主机的时候，经常会看到管理员的桌面会放着putty.exe，这说</description>
    </item>
    
    <item>
      <title>贝叶斯安全应用 (1)</title>
      <link>https://lcx.cc/post/4451/</link>
      <pubDate>Tue, 25 Nov 2014 15:53:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4451/</guid>
      <description>贝叶斯安全应用 (1) 杀戮 (某无业游民) | 2014-11-24 18:12 之前在微博上看到一个妹纸分享了一个IBM的paper，关于通过贝叶斯推导数据泄露，很有趣，当然算法本</description>
    </item>
    
    <item>
      <title>Android app 端的 sql 注入</title>
      <link>https://lcx.cc/post/4428/</link>
      <pubDate>Thu, 11 Sep 2014 09:58:25 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4428/</guid>
      <description>前言： 最近入门开始玩android的安全，但是国内研究的真的很少，国外有本牛逼的书《Android Hacker&#39;s Handbook》，写的不错，但是看着睡</description>
    </item>
    
    <item>
      <title>WiFi流量劫持：网站JS脚本缓存投毒！长期控制！浏览任意页面即可中毒！</title>
      <link>https://lcx.cc/post/4426/</link>
      <pubDate>Wed, 03 Sep 2014 10:58:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4426/</guid>
      <description>WiFi流量劫持—— 浏览任意页面即可中毒！ 大家都知道公共场所的Wifi安全性很差，但并不清楚究竟有多差。大多以为只要不上QQ、不登陆网站账号</description>
    </item>
    
    <item>
      <title>关于 全自动化 sql注入工具检测和利用 cms指纹识别和利用工具</title>
      <link>https://lcx.cc/post/4400/</link>
      <pubDate>Thu, 17 Jul 2014 10:42:01 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4400/</guid>
      <description>[内容已屏蔽！] 留言评论（旧系统）： 佚名 @ 2014-07-17 12:50:16 老和尚 为什么这么眼生？ 本站回复： -_-||| 佚名 @ 2014-07-18 10:27:38 12306购票软件再曝漏洞 黄牛1人可囤1车厢票 我要</description>
    </item>
    
    <item>
      <title>对于一个http请求，如何找里面的安全漏洞，能否自动化完成呢？</title>
      <link>https://lcx.cc/post/4398/</link>
      <pubDate>Wed, 16 Jul 2014 15:23:44 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4398/</guid>
      <description>对于一个http请求，如何找里面的安全漏洞，能否自动化完成呢？ xsser (十根阳具有长短!!) | 2014-06-16 14:25 POST /cpc/incrementPV HTTP/1.1 Host: x.com Content-Length: 48 Accept: application/json, text/javascript, */*; q=0.01 Origin: http://x.com X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 5.2) AppleWebKit/537.36 (KHTML, like</description>
    </item>
    
    <item>
      <title>Discuz! 7.2 SQL注入exp（getshell版）</title>
      <link>https://lcx.cc/post/4386/</link>
      <pubDate>Fri, 04 Jul 2014 09:17:31 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4386/</guid>
      <description>已经有人写出一些工具了,但是感觉不怎么好用,就自己写了个。 参数： 1.可直接getshell 2.爆管理账号密码 3.爆表前缀 如果表前缀不是默认的</description>
    </item>
    
    <item>
      <title>对于一个http请求，如何找里面的安全漏洞，能否自动化完成呢？</title>
      <link>https://lcx.cc/post/4370/</link>
      <pubDate>Tue, 17 Jun 2014 10:06:40 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4370/</guid>
      <description>对于一个http请求，如何找里面的安全漏洞，能否自动化完成呢？ xsser (十根阳具有长短!!) | 2014-06-16 14:25 POST /cpc/incrementPV HTTP/1.1 Host: x.com Content-Length: 48 Accept: application/json, text/javascript, */*; q=0.01 Origin: http://x.com X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Windows NT 5.2) AppleWebKit/537.36 (KHTML, like</description>
    </item>
    
    <item>
      <title>XSS Filter Evasion Cheat Sheet 中文版</title>
      <link>https://lcx.cc/post/4328/</link>
      <pubDate>Sat, 17 May 2014 09:28:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4328/</guid>
      <description>前言 译者注： 翻译本文的最初原因是当我自己看到这篇文章后，觉得它是非常有价值。但是这么著名的一个备忘录却一直没有人把它翻译成中文版。很多人仅仅</description>
    </item>
    
    <item>
      <title>Mysql Insert into set 语法绕过 360scan insert 防注入</title>
      <link>https://lcx.cc/post/4293/</link>
      <pubDate>Thu, 24 Apr 2014 09:50:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4293/</guid>
      <description>360scan正则：INSERT\\s+INTO.+?VALUES 其实Mysql不只可以用insert into xxx values 插入数据，还可以:insert into</description>
    </item>
    
    <item>
      <title>WordPress 更新至 3.8.2 修复多个漏洞</title>
      <link>https://lcx.cc/post/4281/</link>
      <pubDate>Tue, 15 Apr 2014 09:41:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4281/</guid>
      <description>在被OpenSSL刷屏的时候，WordPress更新。 WordPress 3.8.2现在已经提供下载，最新的版本更新了几个重要的安全问题，所以推荐更新。 WordPress 3.</description>
    </item>
    
    <item>
      <title>轻松绕各种WAF的POST注入、跨站防御(比如安全狗)</title>
      <link>https://lcx.cc/post/4263/</link>
      <pubDate>Mon, 31 Mar 2014 10:41:10 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4263/</guid>
      <description>XXX之前有提过multipart请求绕过各种WAF方式：360网站宝/安全宝/加速乐及其他类似产品防护绕过缺陷之一，貌似没引起多少人关注。</description>
    </item>
    
    <item>
      <title>DedeCMS 注入漏洞批量入侵爆菊 Exp</title>
      <link>https://lcx.cc/post/4228/</link>
      <pubDate>Sat, 01 Mar 2014 09:58:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4228/</guid>
      <description>DEDE批量爆菊 Sunshie (博客求大牛友链http://phpinfo.me) | 2014-02-28 21:00 &amp;lt;?php print_r( &#34; +------------------------------------+ DEDECMS批量爆菊利用工具 By :Sunshie QQ:11410569</description>
    </item>
    
    <item>
      <title>科普：Burpsuite导出log配合Sqlmap批量扫描注入点</title>
      <link>https://lcx.cc/post/4207/</link>
      <pubDate>Thu, 13 Feb 2014 10:37:50 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4207/</guid>
      <description>科普：Burpsuite导出log配合Sqlmap批量扫描注入点 动后河 (类的继承) | 2014-02-12 20:19 昨天google了，今天科普： 首先是burp设置记录</description>
    </item>
    
    <item>
      <title>PHP漏洞挖掘思路&#43;实例</title>
      <link>https://lcx.cc/post/4174/</link>
      <pubDate>Wed, 15 Jan 2014 11:27:24 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4174/</guid>
      <description>最近研究PHP漏洞的挖掘，总结了一些我挖到的漏洞，整理了一下思路，求各路神人补充、批评、指导~ 本文所有示例均来自我在乌云上已由厂商允许公开的</description>
    </item>
    
    <item>
      <title>Attacking MongoDB</title>
      <link>https://lcx.cc/post/4170/</link>
      <pubDate>Wed, 15 Jan 2014 10:07:05 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4170/</guid>
      <description>0x00 背景 本文主要来自于HITB Ezine Issue 010中的《Attacking MongoDB》 MongoDB是一个基于分布式文件存储的数据库。由C++语言编</description>
    </item>
    
    <item>
      <title>密码重置漏洞那点事儿</title>
      <link>https://lcx.cc/post/4162/</link>
      <pubDate>Thu, 09 Jan 2014 15:29:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4162/</guid>
      <description>密码重置功能是一些常见漏洞的起因。例如用户名枚举漏洞（数据库中用户名不存在和密码错误显示不同的错误信息），敏感信息泄露（把明文密码通过e-m</description>
    </item>
    
    <item>
      <title>剖析：一次入侵Linux服务器的事件记录</title>
      <link>https://lcx.cc/post/4146/</link>
      <pubDate>Fri, 03 Jan 2014 10:02:32 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4146/</guid>
      <description>针对此PHP漏洞的尝试，ColdFusion，内容管理系统存在此漏洞是很常见的。在某些情况下，特定的攻击可能会成功，对高价值的服务器，会导致</description>
    </item>
    
    <item>
      <title>探秘短信马产业链-从逆向到爆菊</title>
      <link>https://lcx.cc/post/4100/</link>
      <pubDate>Wed, 18 Dec 2013 14:22:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4100/</guid>
      <description>0x00&amp;nbsp;楔子 近日，小明有了一桩烦心事，扰的他寝食难安。原来是女神的某安卓手机出了怪病，短信收不到，发出去别人也收不到，更可气的是</description>
    </item>
    
    <item>
      <title>IOS开发安全须知</title>
      <link>https://lcx.cc/post/4094/</link>
      <pubDate>Tue, 17 Dec 2013 11:27:01 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4094/</guid>
      <description>最近移动端的漏洞见得比较多，正好从OWASP上找到了IOS开发安全须知，翻译过来，给各位看看。 不安全的数据存储 (M1) 毫无疑问，移动设备用户面临的</description>
    </item>
    
    <item>
      <title>Hibernate对注入的简单测试</title>
      <link>https://lcx.cc/post/4093/</link>
      <pubDate>Tue, 17 Dec 2013 10:55:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4093/</guid>
      <description>0x00 背景 前段时间遇到一个使用了Hibernate框架的站，以前没怎么接触过（由于是Java盲，所以大家勿喷），再注入的事情发生了许多奇奇怪怪的</description>
    </item>
    
    <item>
      <title>电商网站的安全性，淘宝、京东、苏宁漏洞大汇总</title>
      <link>https://lcx.cc/post/4047/</link>
      <pubDate>Sun, 24 Nov 2013 15:37:04 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4047/</guid>
      <description>0x00 背景 电商网站由于是直接涉及到金钱的交易，对其本身的安全性要求很高。 这样才能保证普通网民在其网站做金钱交易的时候，不会发生安全问题。 双11刚</description>
    </item>
    
    <item>
      <title>今天遇到一个微信公众平台注入的实例</title>
      <link>https://lcx.cc/post/3975/</link>
      <pubDate>Thu, 31 Oct 2013 09:25:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3975/</guid>
      <description>之前有过讨论（大家有考虑过微信公众平台的注入么），但是情况是我自己模拟出来的，今天终于遇到一个实例。 话不多说，上图。 附送盲打到的后台 [原文地</description>
    </item>
    
    <item>
      <title>大家有考虑过微信公众平台的注入么</title>
      <link>https://lcx.cc/post/3974/</link>
      <pubDate>Thu, 31 Oct 2013 09:16:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3974/</guid>
      <description>大家有考虑过微信公众平台的注入么 Valo洛洛 (tomorrow.) | 2013-08-08 19:04 RT [原文地址] 相关讨论： 1# Icyblade | 2013-08-08 19:09 你这个不是微信的问题吧 我手上也有个微信公众平台，工作流</description>
    </item>
    
    <item>
      <title>Zabbix SQL Injection/RCE – CVE-2013-5743</title>
      <link>https://lcx.cc/post/3959/</link>
      <pubDate>Fri, 18 Oct 2013 09:30:09 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3959/</guid>
      <description>from:https://www.corelan.be/index.php/2013/10/04/zabbix-sql-injectionrce-cve-2013-5743/ 0x00 背景 该漏洞于2013年9月11号提交，9月23号得到确认，10月2号发布补丁。 新出的0day，可以通过sql注入直接进入后台，并执行系统</description>
    </item>
    
    <item>
      <title>从哲学角度看渗透之关于渗透与高智商电影</title>
      <link>https://lcx.cc/post/3885/</link>
      <pubDate>Tue, 17 Sep 2013 16:32:09 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3885/</guid>
      <description>今天闲来无事，就来写篇文章吧，好久没有写文章了，不知道是技术下降了，还是毛原因（反正技术也不咋地）。 想必很多人在渗透过程中都会遇到各种各样的</description>
    </item>
    
    <item>
      <title>DVWA中学习PHP常见漏洞及修复方法</title>
      <link>https://lcx.cc/post/3883/</link>
      <pubDate>Tue, 17 Sep 2013 15:20:47 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3883/</guid>
      <description>“安全是一个整体，保证安全不在于强大的地方有多强大 而在于真正薄弱的地方在哪里”--剑心 从很多的渗透大型企业内网的案例来看，入侵者大多数是从W</description>
    </item>
    
    <item>
      <title>WordPress &lt; 3.6.1 PHP 对象注入漏洞</title>
      <link>https://lcx.cc/post/3877/</link>
      <pubDate>Mon, 16 Sep 2013 10:35:19 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3877/</guid>
      <description>From:WordPress &amp;lt; 3.6.1 PHP Object Injection 0x00 背景 当我读到一篇关于Joomla的“PHP对象注射”的漏洞blog后，我挖深了一点就发现Stefan Esser大神在2010年</description>
    </item>
    
    <item>
      <title>sqlmap用户手册[续]</title>
      <link>https://lcx.cc/post/3794/</link>
      <pubDate>Wed, 07 Aug 2013 10:33:14 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3794/</guid>
      <description>《sqlmap用户手册》其实只写了大部分可能用到的参数，还有些并未写，这次补上~ ps：其实看到zone里很多问sqlmap的问题在通读看完那</description>
    </item>
    
    <item>
      <title>Freedom Hosting创始人被捕 半数Tor网站被FBI入侵 用户浏览器被注入JS脚本</title>
      <link>https://lcx.cc/post/3791/</link>
      <pubDate>Tue, 06 Aug 2013 09:23:18 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3791/</guid>
      <description>提供基于Tor匿名网络托管服务的爱尔兰公司Freedom Hosting（Host Ultra Limited）创始人Eric Eoin Marques已经被捕，正</description>
    </item>
    
    <item>
      <title>几种通用防注入程序绕过方法</title>
      <link>https://lcx.cc/post/3780/</link>
      <pubDate>Wed, 31 Jul 2013 09:30:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3780/</guid>
      <description>0x00 前言 目前主流的CMS系统当中都会内置一些防注入的程序，例如Discuz、dedeCMS等，本篇主要介绍绕过方法。 0x01 Discuz x2.0防注入 防注入原</description>
    </item>
    
    <item>
      <title>刚刚看到个鱼站，然后就被轮流爆菊了……</title>
      <link>https://lcx.cc/post/3751/</link>
      <pubDate>Mon, 22 Jul 2013 15:02:23 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3751/</guid>
      <description>刚刚看到个鱼站 by灰客 | 2013-07-21 11:08 http://ldsjc.com/ http://ldsjc.com/manager/ 我去 这个源码碉堡了 谁去扒下来？ @核攻击 @xsser @VIP [原帖地址] 相关讨论： 1# 苦战 | 2013-07-21 11:11 紫緣設計 Ver 最新官方完美版【完全防</description>
    </item>
    
    <item>
      <title>应用安全思维系列之一：如何保护密码才安全</title>
      <link>https://lcx.cc/post/3723/</link>
      <pubDate>Tue, 16 Jul 2013 09:54:34 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3723/</guid>
      <description>这两天有点空，多写一些吧，上篇文章当中涉及到的【故事】其实还有太多太多，我就不记流水帐了，只挑对于多数人来说容易看懂的说说，抛砖引玉吧。 【本</description>
    </item>
    
    <item>
      <title>美国VPS管理系统SolusVM 1.13.03 SQL注入漏洞（含exp）</title>
      <link>https://lcx.cc/post/3679/</link>
      <pubDate>Mon, 08 Jul 2013 16:22:48 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3679/</guid>
      <description>SolusVM软件是一个拥有强大的图形用户界面的VPS管理系统，可以同时管理三种虚拟化技术：OpenVZ ,Xen Paravirtualizatio</description>
    </item>
    
    <item>
      <title>Sqlmap注入技巧收集</title>
      <link>https://lcx.cc/post/3664/</link>
      <pubDate>Mon, 08 Jul 2013 11:07:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3664/</guid>
      <description>收集了一些利用Sqlmap做注入测试的TIPS，其中也包含一点绕WAF的技巧，便于大家集中查阅，欢迎接楼补充、分享。 TIP1 当我们注射的时候，判断</description>
    </item>
    
    <item>
      <title>[渗透技巧]python脚本处理伪静态注入</title>
      <link>https://lcx.cc/post/3612/</link>
      <pubDate>Thu, 20 Jun 2013 18:19:51 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3612/</guid>
      <description>目前有很多网站做了rewrite，如 /?id=1 /1 /1111.php 大趋势下，攻击的门槛逐渐增高。这样有利有弊，喜欢研究的会深入钻研，另一方面只会用工具不懂原理的则充</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之一：淘宝、百度、腾讯的解决方案之瑕疵</title>
      <link>https://lcx.cc/post/3611/</link>
      <pubDate>Thu, 20 Jun 2013 18:10:47 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3611/</guid>
      <description>【声明】 1. 只是技术研究，没有攻击哪家公司之意 2. 本文不涉及漏洞公布，不影响以上公司的任何应用安全之相关事宜 3. 本人没兴趣炒作，举这三大公司为例表</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之三: 例解过后，再回首您正在维护的产品</title>
      <link>https://lcx.cc/post/3607/</link>
      <pubDate>Thu, 20 Jun 2013 17:22:08 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3607/</guid>
      <description>【说明】 1. 举例子所占篇幅较大，详细的例子只举一个吧，目前只举较典型的二维编码的例子 2. 如果您想运行此例，那么你需要自己实现例子当中的类似于ur</description>
    </item>
    
    <item>
      <title>sqlmap用户手册</title>
      <link>https://lcx.cc/post/3581/</link>
      <pubDate>Mon, 17 Jun 2013 16:32:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3581/</guid>
      <description>2013/06/13 18:45 | 瞌睡龙 http://192.168.136.131/sqlmap/mysql/get_int.php?id=1 当给sqlmap这么一个url的时候，它会： 1、判断可注入的参数 2、判断可以用那种SQL注入技术来注入 3、识别出哪种数据库 4、</description>
    </item>
    
    <item>
      <title>PHP安全编码</title>
      <link>https://lcx.cc/post/3580/</link>
      <pubDate>Mon, 17 Jun 2013 16:07:33 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3580/</guid>
      <description>2013/06/03 18:56 | 瞌睡龙 验证过滤用户的输入 即使是最普通的字母数字输入也可能是危险的，列举几个容易引起安全问题的字符： ! $ ^ &amp;amp; * ( ) ~ [ ] \ | { } &#39; &#34; ; &amp;lt;</description>
    </item>
    
    <item>
      <title>waf 绕过的技巧，SQL 注入中绕过 waf 的技巧</title>
      <link>https://lcx.cc/post/3579/</link>
      <pubDate>Mon, 17 Jun 2013 14:51:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3579/</guid>
      <description>2013/05/31 17:41 | livers 研究过国内外的waf。分享一些 奇淫绝技。 一些大家都了解的技巧如： /*!*/,SELECT[0x09,0x0A-0x0D,0x20,0xA0]xx FROM 不再重造轮子。 Mysql tips1: 神奇的 ` (格式输出表的那个控制符) 过空格和一些</description>
    </item>
    
    <item>
      <title>dedecms最新版本修改任意管理员漏洞 &#43; getshell &#43; exp</title>
      <link>https://lcx.cc/post/3562/</link>
      <pubDate>Sat, 08 Jun 2013 08:53:49 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3562/</guid>
      <description>此漏洞无视gpc转义，过80sec注入防御。 补充下，不用担心后台找不到。这只是一个demo，都能修改任意数据库了，还怕拿不到SHELL？ 起因</description>
    </item>
    
    <item>
      <title>【ASP.NET代码审计】逐浪CMS（ZOOMLA!CMS）漏洞挖掘</title>
      <link>https://lcx.cc/post/3556/</link>
      <pubDate>Wed, 05 Jun 2013 16:30:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3556/</guid>
      <description>0X00 综述 逐浪CMS是基于.net编写的一款CMS，号称还是军工单位也采用过这套CMS，更号称开源，那天下了他所谓的“源代码“下来，纠结了，页面</description>
    </item>
    
  </channel>
</rss>
