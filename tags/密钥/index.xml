<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>密钥 on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/tags/%E5%AF%86%E9%92%A5/</link>
    <description>Recent content in 密钥 on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Sat, 06 Jul 2019 12:50:58 +0800</lastBuildDate><atom:link href="https://lcx.cc/tags/%E5%AF%86%E9%92%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rc4 加密 解密 算法 调试 测试 工具</title>
      <link>https://lcx.cc/post/4596/</link>
      <pubDate>Sat, 06 Jul 2019 12:50:58 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4596/</guid>
      <description>rc4 是一种很常见的加密算法，编程经常用到，然而之前网上找了一大圈没有顺手的，所以之前自己花了点时间写了一个小工具，十分方便好用，同时支持二进制</description>
    </item>
    
    <item>
      <title>MD5散列密码不等于MD5的安全性</title>
      <link>https://lcx.cc/post/4476/</link>
      <pubDate>Fri, 09 Jan 2015 19:09:27 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4476/</guid>
      <description>想了很久，标题还是水一点算了[密码学相关] xsjswt | 2015-01-08 10:00 《应用密码学 -算法、协议与C源码》是一本很好的密码学协议入门、科普书 作者并没有一开始就介绍</description>
    </item>
    
    <item>
      <title>是否有算法保护已知内容的数据（以秘密为例）</title>
      <link>https://lcx.cc/post/4385/</link>
      <pubDate>Tue, 01 Jul 2014 10:18:07 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4385/</guid>
      <description>是否有算法保护已知内容的数据（以秘密为例） xsser (十根阳具有长短!!) | 2014-06-30 21:19 我们知道手机号码是已知的，秘密借助手机号标识身份，那么当相关数据出现</description>
    </item>
    
    <item>
      <title>移动&#34;4G&#34;卡所带来的威胁，随便补办别人手机卡？4G换卡补办别人手机号？</title>
      <link>https://lcx.cc/post/4352/</link>
      <pubDate>Sat, 31 May 2014 10:19:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4352/</guid>
      <description>移动&#34;4G&#34;卡所带来的威胁 从容 (快点交出0day，我保证不砍死你- -.) | 2014-05-29 20:27 又到了发帖的季节了- -. 写的不怎么地，还请大家海涵- -. 现在科技这么发</description>
    </item>
    
    <item>
      <title>TrueCrypt 的一个[可能]的缺陷，如果密码恢复光盘被发现会怎么样？</title>
      <link>https://lcx.cc/post/4282/</link>
      <pubDate>Wed, 16 Apr 2014 09:29:05 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4282/</guid>
      <description>Truecrypt的一个[可能]的缺陷 safe121 (Great Leader Kim Jong-Un General Long Live!!!) | 2014-04-16 05:52 @核攻击结帖..我土鳖了...恢复光盘不包含密码信息.....感谢核攻击的回答 ---------------------------------------------------------------</description>
    </item>
    
    <item>
      <title>利用声学密码分析攻击破译4096位RSA加密算法</title>
      <link>https://lcx.cc/post/4157/</link>
      <pubDate>Thu, 09 Jan 2014 10:47:11 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4157/</guid>
      <description>引言：计算机科学家开发出了一种可靠提取密钥的新攻击技术：捕捉计算机在展示加密信息时产生的高声调音频。这项密码破解技术（PDF）属于物理攻击，</description>
    </item>
    
    <item>
      <title>IOS开发安全须知</title>
      <link>https://lcx.cc/post/4094/</link>
      <pubDate>Tue, 17 Dec 2013 11:27:01 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4094/</guid>
      <description>最近移动端的漏洞见得比较多，正好从OWASP上找到了IOS开发安全须知，翻译过来，给各位看看。 不安全的数据存储 (M1) 毫无疑问，移动设备用户面临的</description>
    </item>
    
    <item>
      <title>超贱！病毒加密你所有重要文档并索要赎金！2013年度最下作恶意软件！</title>
      <link>https://lcx.cc/post/3983/</link>
      <pubDate>Mon, 04 Nov 2013 11:33:08 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3983/</guid>
      <description>2013年度最下作恶意软件。 Kuuki | 2013-11-03 15:10 简而言之：会撕票的恶意软件。约今年9月出现，10月开始引人关注。 敲诈程序向受害者索要比特币 名叫Crypt</description>
    </item>
    
    <item>
      <title>adobe 1.5亿泄露数据 密码算法逆向挑战</title>
      <link>https://lcx.cc/post/3980/</link>
      <pubDate>Mon, 04 Nov 2013 10:16:53 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3980/</guid>
      <description>adobe 1.5亿泄露数据 密码算法逆向挑战 猪猪侠 (A) | 2013-11-02 20:40 # 楼主想到的逆向方式 算出 top 1000，排行第一的密码会是空密码，或123456，然后再反逆算法</description>
    </item>
    
    <item>
      <title>中国科学家成功解决“量子黑客”隐患</title>
      <link>https://lcx.cc/post/3911/</link>
      <pubDate>Thu, 26 Sep 2013 09:27:39 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3911/</guid>
      <description>新华网合肥９月２５日电（记者 徐海涛）近期，中科院院士、中国科技大学教授潘建伟领衔的联合研究小组，在国际上首次实现了与测量器件无关的量子密钥分</description>
    </item>
    
    <item>
      <title>中国黑客组织发现第二个Android万能密钥漏洞</title>
      <link>https://lcx.cc/post/3745/</link>
      <pubDate>Sat, 20 Jul 2013 10:21:34 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3745/</guid>
      <description>一个中国的安全组织Android Security Squad称他们发现了第二个万能密钥，能够在不破坏应用签名的情况下修改应用本身。 一个文件或者文档的数字签名</description>
    </item>
    
    <item>
      <title>为防止第三方从路由器窃取数据，Facebook 将采用高等级加密</title>
      <link>https://lcx.cc/post/3625/</link>
      <pubDate>Thu, 27 Jun 2013 11:38:09 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3625/</guid>
      <description>报道，由于近日曝光的棱镜项目，Facebook 将采用高等级加密手段提高其用户数据安全性。美国中情局前雇员爱德华·斯诺登近日曝光，美国政府曾经</description>
    </item>
    
    <item>
      <title>[VB] RAS连接L2TP方式VPN的设置方法(写法)</title>
      <link>https://lcx.cc/post/3196/</link>
      <pubDate>Sat, 22 Dec 2012 17:14:16 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3196/</guid>
      <description>前段时间帮朋友写一个vpn的客户端, 涉及到了L2TP方式的连接问题。 先看看普通的PPTP连接设置方法: With re .dwSize = LenB(re) .dwCountryCode = 86 .dwCountryID = 86 .dwDialExtraPercent = 75 .dwDialExtraSampleSeconds = 120 .dwDialMode =</description>
    </item>
    
    <item>
      <title>可能的拦截HTTPS加密通信的手段 破解Google Gmail的https新思路</title>
      <link>https://lcx.cc/post/3048/</link>
      <pubDate>Wed, 31 Oct 2012 10:16:58 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3048/</guid>
      <description>可能的拦截HTTPS加密通信的手段，SSL中间人攻击及防范，破解Google Gmail的https新思路。 原文出自：http://www.w</description>
    </item>
    
    <item>
      <title>关于下一代木马的设计理念的讨论</title>
      <link>https://lcx.cc/post/2843/</link>
      <pubDate>Mon, 03 Sep 2012 15:51:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2843/</guid>
      <description>信息来源：邪恶八进制信息安全团队（www.eviloctal.com） 文章作者：qszzsq（森哥） ************************************************************************************************************************ *&amp;nbsp;&amp;nbsp;&amp;nbsp; 写在前面的话 *&amp;nbsp;&amp;nbsp;&amp;nbsp; 几天前，曾经把一部分想</description>
    </item>
    
    <item>
      <title>【文章】10.8 密文中隐藏密文 密文 乱码本</title>
      <link>https://lcx.cc/post/1041/</link>
      <pubDate>Sat, 25 Dec 2010 08:07:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1041/</guid>
      <description>10.8 密文中隐藏密文 &amp;nbsp;&amp;nbsp;&amp;nbsp; 在过去几年里，Alice和Bob一直是互相用密文发送消息。Eve将所有的这些消息全部收集起来，但对它们无可奈何。最后，秘密</description>
    </item>
    
    <item>
      <title>【文章】10.5 硬件加密与软件加密 - 加密盒</title>
      <link>https://lcx.cc/post/1038/</link>
      <pubDate>Fri, 24 Dec 2010 02:26:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1038/</guid>
      <description>10.5 硬件加密与软件加密 硬件 &amp;nbsp;&amp;nbsp;&amp;nbsp; 直到最近，所有加密产品都是特定的硬件形式。这些加/解密盒子被嵌入到通信线路中，然后对所有通过的数据进行加密。虽然软</description>
    </item>
    
    <item>
      <title>【文章】10.4 加密数据存储、驱动器级加密</title>
      <link>https://lcx.cc/post/1035/</link>
      <pubDate>Wed, 22 Dec 2010 04:03:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1035/</guid>
      <description>10.4 加密数据存储 &amp;nbsp;&amp;nbsp;&amp;nbsp; 用于存储的加密数据、以后可以在Alice-Bob模式里检查。Alice仍可向 Bob发送消息，只是此处的“Bob”是某时间后的</description>
    </item>
    
    <item>
      <title>【文章】10.3 通信信道加密 链对链 端对端</title>
      <link>https://lcx.cc/post/1034/</link>
      <pubDate>Wed, 22 Dec 2010 03:54:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1034/</guid>
      <description>10.3 通信信道加密 &amp;nbsp;&amp;nbsp;&amp;nbsp; 这是一个典型的Alice—Bob问题：Alice想传送一个安全的消息给Bob，她怎样去做？她将消息加密。 &amp;nbsp;&amp;nbsp;&amp;nbsp; 理论上，加密可以在</description>
    </item>
    
    <item>
      <title>【文章】10.2公钥密码与对称密码 密钥管理</title>
      <link>https://lcx.cc/post/1031/</link>
      <pubDate>Sun, 19 Dec 2010 02:48:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1031/</guid>
      <description>10.2 公钥密码与对称密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 公开密码与对称密码哪一个好呢？这个问题没有任何意义，但是自从公开密码体制产生以来就一直争论不休。这个争论假定两种密码算</description>
    </item>
    
    <item>
      <title>【文章】10.1 选择算法 - 算法的出口 - 保密</title>
      <link>https://lcx.cc/post/1029/</link>
      <pubDate>Fri, 17 Dec 2010 07:26:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1029/</guid>
      <description>10.1 选择算法 &amp;nbsp;&amp;nbsp;&amp;nbsp; 当开始估计并选择算法时，人们有下面几种选择： &amp;nbsp;&amp;nbsp;&amp;nbsp; ——他们可以选一公开算法，基于相信一个公开算法已经受到许多分析者的攻击，如果还没有</description>
    </item>
    
    <item>
      <title>【文章】第十章 使用算法 数据 通信安全性</title>
      <link>https://lcx.cc/post/1028/</link>
      <pubDate>Thu, 16 Dec 2010 04:37:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1028/</guid>
      <description>第十章&amp;nbsp;使用算法 &amp;nbsp;&amp;nbsp;&amp;nbsp; 安全性——数据安全性、通信安全性、信息安全性，诸如此类——就是一条链子。整个系统的安全性仅是最脆弱的连接的安全性</description>
    </item>
    
    <item>
      <title>【文章】Winrar 压缩软件的加密算法 - AES</title>
      <link>https://lcx.cc/post/1027/</link>
      <pubDate>Thu, 16 Dec 2010 04:27:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1027/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 转自：http://t00ls.net/thread-13721-1-1.html，原作者：xlk111。 &amp;nbsp;&amp;nbsp;&amp;nbsp; 昨天偶然发现 Winrar 压缩软件的加密算</description>
    </item>
    
    <item>
      <title>Winrar 压缩、加密过程中的一个巧合、Bug</title>
      <link>https://lcx.cc/post/1026/</link>
      <pubDate>Wed, 15 Dec 2010 00:51:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1026/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 转自：http://t00ls.net/thread-13702-1-1.html，原作者：xlk111。 &amp;nbsp;&amp;nbsp;&amp;nbsp; 无意中生成一个txt文件，内容</description>
    </item>
    
    <item>
      <title>【文章】9.11 选择密码模式 - 加密随机数据</title>
      <link>https://lcx.cc/post/1021/</link>
      <pubDate>Mon, 13 Dec 2010 18:06:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1021/</guid>
      <description>9.11&amp;nbsp;选择密码模式 &amp;nbsp;&amp;nbsp;&amp;nbsp; 如果你所关心的主要是简单和速度的话，ECB是最简单和最快的分组密码的模式，当然也是最弱的。除了容易受到重放</description>
    </item>
    
    <item>
      <title>【文章】9.10 其他分组密码模式 分组链接式</title>
      <link>https://lcx.cc/post/1020/</link>
      <pubDate>Sun, 12 Dec 2010 07:20:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1020/</guid>
      <description>9.10&amp;nbsp;其他分组密码模式 分组链接模式 &amp;nbsp;&amp;nbsp;&amp;nbsp; 为了在分组链接（BC）模式中使用分组算法，可以简单地将分组密码算法的输入跟所有前面密文分组</description>
    </item>
    
    <item>
      <title>【文章】9.9 计数器模式 分组密码算法 加密</title>
      <link>https://lcx.cc/post/1019/</link>
      <pubDate>Sun, 12 Dec 2010 07:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1019/</guid>
      <description>9.9 计数器模式 &amp;nbsp;&amp;nbsp;&amp;nbsp; 计数模式下的分组密码算法使用序列号作为算法的输入[824，498，715]。不是用加密算法的输出填充寄存器，而是将一个计数器输</description>
    </item>
    
    <item>
      <title>【文章】9.8 输出反馈模式: 同步序列密码法</title>
      <link>https://lcx.cc/post/1017/</link>
      <pubDate>Sat, 11 Dec 2010 17:09:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1017/</guid>
      <description>9.8&amp;nbsp;输出反馈模式 &amp;nbsp;&amp;nbsp;&amp;nbsp; “输出反馈（OFB）”模式是运行分组密码作为同步序列密码算法的一种方法。它与密码反馈模式相似，而OFB是将前</description>
    </item>
    
    <item>
      <title>【文章】9.7 同步序列密码 密钥流 插入攻击</title>
      <link>https://lcx.cc/post/1016/</link>
      <pubDate>Sat, 11 Dec 2010 17:02:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1016/</guid>
      <description>9.7&amp;nbsp;同步序列密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 在同步序列密码中密钥流是独立于消息流而产生的。军方称之为密钥自动密钥（KAK）。加密端密钥流发生器一位接一位</description>
    </item>
    
    <item>
      <title>【文章】9.5 自同步序列密码 - 密钥流发生器</title>
      <link>https://lcx.cc/post/1014/</link>
      <pubDate>Fri, 10 Dec 2010 14:09:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1014/</guid>
      <description>9.5&amp;nbsp;自同步序列密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 自同步序列密码就是密钥流的每一位是前面固定数量密文位的函数[1378]。军方称为密文自动密钥（CTAK）。</description>
    </item>
    
    <item>
      <title>【文章】9.4 序列密码算法 - 滚动密钥发生器</title>
      <link>https://lcx.cc/post/1012/</link>
      <pubDate>Thu, 09 Dec 2010 07:18:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1012/</guid>
      <description>9.4 序列密码算法 &amp;nbsp;&amp;nbsp;&amp;nbsp; 序列密码算法将明文逐位转换成密文 。该算法最简单的应用如图9.6所示。密钥流发生器（也称为滚动密钥发生器）输出一系列比特流：K</description>
    </item>
    
    <item>
      <title>【文章】9.2 分组重放： ECB模式 密钥 加密</title>
      <link>https://lcx.cc/post/1010/</link>
      <pubDate>Wed, 08 Dec 2010 06:22:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1010/</guid>
      <description>9.2&amp;nbsp;分组重放 &amp;nbsp;&amp;nbsp; &amp;nbsp;ECB模式最严重的问题是敌人可以在不知道密钥情况下能够修改被加密过的消息，用这种办法可以欺骗指定的接</description>
    </item>
    
    <item>
      <title>【文章】9.1 电子密码本模式 - 多重加密处理</title>
      <link>https://lcx.cc/post/1009/</link>
      <pubDate>Wed, 08 Dec 2010 06:16:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1009/</guid>
      <description>9.1&amp;nbsp;电子密码本模式 &amp;nbsp;&amp;nbsp;&amp;nbsp; 电子密码本（ECB）模式是使用分组密码算法的最明显方式：一个明文分组加密成一个密文分组。因为相同的明文分组</description>
    </item>
    
    <item>
      <title>【文章】8.12 公开密钥的密钥管理 密钥加密</title>
      <link>https://lcx.cc/post/1007/</link>
      <pubDate>Tue, 07 Dec 2010 16:24:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1007/</guid>
      <description>8.12&amp;nbsp;公开密钥的密钥管理 &amp;nbsp;&amp;nbsp;&amp;nbsp; 公开密钥密码使得密钥较易管理，但它有自己的问题。无论网络上有多少人，每个人只有一个公开密钥。如果Al</description>
    </item>
    
    <item>
      <title>【文章】8.11 销毁密钥 - 定期替换 磁盘切碎</title>
      <link>https://lcx.cc/post/1006/</link>
      <pubDate>Tue, 07 Dec 2010 16:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1006/</guid>
      <description>8.11&amp;nbsp;销毁密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 如果密钥必须定期替换，旧钥就必须销毁。旧密钥是有价值的，即使不再使用，有了它们，攻击者就能读到由它加密的一些旧</description>
    </item>
    
    <item>
      <title>【文章】8.10 密钥有效期 密钥破译 密文分析</title>
      <link>https://lcx.cc/post/1005/</link>
      <pubDate>Tue, 07 Dec 2010 16:10:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1005/</guid>
      <description>8.10&amp;nbsp;密钥有效期 &amp;nbsp;&amp;nbsp;&amp;nbsp; 没有哪个8.10 密钥有效期能无限期使用，它应当和护照、许可证一样能够自动失效。以下有几个原因： &amp;nbsp;&amp;nbsp;&amp;nbsp; ——密钥使用</description>
    </item>
    
    <item>
      <title>【文章】8.9 泄露密钥 对称密码 私/密钥泄露</title>
      <link>https://lcx.cc/post/1004/</link>
      <pubDate>Mon, 06 Dec 2010 07:59:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1004/</guid>
      <description>8.9&amp;nbsp;泄露密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 本书中所有的协议、技术、算法仅当在密钥（公钥体制中的私钥）保密的情况下安全，如果Alice的密钥丢失、被盗、出现</description>
    </item>
    
    <item>
      <title>【文章】8.8 备份密钥 保密规则 智能卡 密钥</title>
      <link>https://lcx.cc/post/1003/</link>
      <pubDate>Mon, 06 Dec 2010 07:55:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1003/</guid>
      <description>8.8&amp;nbsp;备份密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice是保密有限公司的首席财政官员——“我们不能告诉你我们的秘密。”像任何好的公司官员一样，她遵守公司的保密</description>
    </item>
    
    <item>
      <title>【文章】8.7 存储密钥 - 密钥碾碎技术 加密箱</title>
      <link>https://lcx.cc/post/1002/</link>
      <pubDate>Mon, 06 Dec 2010 07:52:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1002/</guid>
      <description>8.7&amp;nbsp;存储密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 最不复杂的的密钥存储问题是单用户的密钥存储， Alice加密文件以备以后用。因为只涉及她一个人，且只有她一人对密钥</description>
    </item>
    
    <item>
      <title>【文章】8.6 更新密钥 从旧密钥中产生新密钥</title>
      <link>https://lcx.cc/post/1001/</link>
      <pubDate>Sun, 05 Dec 2010 16:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1001/</guid>
      <description>8.6 更新密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 设想你每天都想改变加密的数据链路的密钥。有时，每天进行新的密钥分发的确是一件痛苦的事。更容易的解决办法是从旧的密钥中产生新的密钥</description>
    </item>
    
    <item>
      <title>【文章】8.5 使用密钥 - 控制密钥使用 存贮区</title>
      <link>https://lcx.cc/post/1000/</link>
      <pubDate>Sun, 05 Dec 2010 16:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1000/</guid>
      <description>8.5&amp;nbsp;使用密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 软件加密是可怕的。一台微机在一种程序控制下的时代已过去了，现在有Macintosh系统7、Windows NT和U</description>
    </item>
    
    <item>
      <title>【文章】8.4 验证密钥 - 公开密钥数据库 KDC</title>
      <link>https://lcx.cc/post/999/</link>
      <pubDate>Sun, 05 Dec 2010 16:01:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/999/</guid>
      <description>8.4 验证密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 当Bob收到密钥时，他如何知道这是Alice传送的而不是其他人伪装Alice传送的呢？如果是Alice亲自递给他的，那自然简单；</description>
    </item>
    
    <item>
      <title>【文章】8.3 发送密钥 - 大型网络的密钥分发</title>
      <link>https://lcx.cc/post/997/</link>
      <pubDate>Sat, 04 Dec 2010 12:14:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/997/</guid>
      <description>8.3&amp;nbsp;发送密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice和Bob采用对称加密算法进行保密通信：他们需要同一密钥。Alice使用随机密钥发生器生成一个密钥，然后</description>
    </item>
    
    <item>
      <title>【文章】8.2 非线性密钥空间 - 军事密码组织</title>
      <link>https://lcx.cc/post/996/</link>
      <pubDate>Sat, 04 Dec 2010 12:05:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/996/</guid>
      <description>8.2 非线性密钥空间 &amp;nbsp;&amp;nbsp;&amp;nbsp; 假设你是一个军事密码组织，为你的手下制造了一批加密设备。你想使用一个安全的算法，但又怕这些设备落入敌手。最后你想做的就是你</description>
    </item>
    
    <item>
      <title>【文章】8.1 密钥生成: 密钥的空间 字典攻击</title>
      <link>https://lcx.cc/post/995/</link>
      <pubDate>Sat, 04 Dec 2010 11:58:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/995/</guid>
      <description>8.1&amp;nbsp;密钥生成 &amp;nbsp;&amp;nbsp;&amp;nbsp; 算法的安全性依赖于密钥，如果你用一个弱的密钥生成方法，那么你的整个体制是弱的。因为能破译你的密钥生成算法，所以E</description>
    </item>
    
    <item>
      <title>【文章】7.6 总结 第八章 密钥管理 保密通信</title>
      <link>https://lcx.cc/post/994/</link>
      <pubDate>Fri, 03 Dec 2010 15:21:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/994/</guid>
      <description>7.6 总结 &amp;nbsp;&amp;nbsp;&amp;nbsp; 胡扯了整个一章。有关对未来10年计算能力的预测是十分滑稽的，更不用说50年了。那些计算仅可以理解为一个指导，仅此而已。如果说过去就是</description>
    </item>
    
    <item>
      <title>【文章】7.5 密钥应该多长 安全期 破译 保密</title>
      <link>https://lcx.cc/post/993/</link>
      <pubDate>Fri, 03 Dec 2010 15:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/993/</guid>
      <description>7.5&amp;nbsp;密钥应该多长 &amp;nbsp;&amp;nbsp;&amp;nbsp; 答案并不固定，它要视情况而定。为了断定你需要多高的安全性，你应该问自己一些问题：你的数据价值有多大？你的数据</description>
    </item>
    
    <item>
      <title>【文章】7.3 对称密钥和公钥密钥长度的比较</title>
      <link>https://lcx.cc/post/991/</link>
      <pubDate>Thu, 02 Dec 2010 17:18:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/991/</guid>
      <description>7.3 对称密钥和公钥密钥长度的比较 &amp;nbsp;&amp;nbsp;&amp;nbsp; 一个系统往往是在其最弱处被攻击。如果你同时用对称密钥体制算法和公开密钥算法设计一个系统，那么你应该好好选择每</description>
    </item>
    
    <item>
      <title>【文章】7.2 公钥密钥长度 - 分解 量子计算机</title>
      <link>https://lcx.cc/post/990/</link>
      <pubDate>Thu, 02 Dec 2010 17:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/990/</guid>
      <description>7.2 公钥密钥长度 &amp;nbsp;&amp;nbsp;&amp;nbsp; 2.3节中已经讨论了单向函数。例如，两个大素数进行相乘就是一个单向函数，得到相乘的结果很容易，但是由这个结果分解得到两个素数</description>
    </item>
    
    <item>
      <title>【文章】第二篇 密码技术 - 第七章 密钥长度</title>
      <link>https://lcx.cc/post/989/</link>
      <pubDate>Thu, 02 Dec 2010 16:40:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/989/</guid>
      <description>第二篇&amp;nbsp;密码技术 第七章&amp;nbsp;密钥长度 7.1 对称密钥长度 &amp;nbsp;&amp;nbsp;&amp;nbsp; 对称密码体制的安全性是算法强度和密钥长度的函数：前者更加重要而后者则更容</description>
    </item>
    
  </channel>
</rss>
