<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>散列 on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/tags/%E6%95%A3%E5%88%97/</link>
    <description>Recent content in 散列 on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Fri, 09 Jan 2015 19:09:27 +0800</lastBuildDate><atom:link href="https://lcx.cc/tags/%E6%95%A3%E5%88%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MD5散列密码不等于MD5的安全性</title>
      <link>https://lcx.cc/post/4476/</link>
      <pubDate>Fri, 09 Jan 2015 19:09:27 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4476/</guid>
      <description>想了很久，标题还是水一点算了[密码学相关] xsjswt | 2015-01-08 10:00 《应用密码学 -算法、协议与C源码》是一本很好的密码学协议入门、科普书 作者并没有一开始就介绍</description>
    </item>
    
    <item>
      <title>[翻译]Python开发中的密码散列(Hashing)</title>
      <link>https://lcx.cc/post/4475/</link>
      <pubDate>Tue, 06 Jan 2015 14:18:15 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4475/</guid>
      <description>[翻译]Python开发中的密码散列(Hashing) 杀戮 (乌云安全实验室的杂役) | 2015-01-04 23:17 去年7月的一篇小文，看着还不错，就翻译了，当然还是我</description>
    </item>
    
    <item>
      <title>通过nginx配置文件抵御攻击，防御CC攻击的经典思路！</title>
      <link>https://lcx.cc/post/4041/</link>
      <pubDate>Sat, 23 Nov 2013 15:55:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4041/</guid>
      <description>0x00 前言 大家好，我们是OpenCDN团队的Twwy。这次我们来讲讲如何通过简单的配置文件来实现nginx防御攻击的效果。 其实很多时候，各种防攻</description>
    </item>
    
    <item>
      <title>一个关于加密算法的简单讨论帖子</title>
      <link>https://lcx.cc/post/3348/</link>
      <pubDate>Wed, 27 Feb 2013 11:59:33 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3348/</guid>
      <description>我的“加密算法” Lmy (话说名字太长容易被人关注) | 2013-02-27 01:40 Java: byte[] salt = new byte[512]; new SecureRandom().nextBytes(salt); MessageDigest digest = MessageDigest.getInstance(&#34;SHA-512&#34;); digest.update(password.getByte(Charset.forName(&#34;UTF-7&#34;))); digest.update(salt); 1# safe121 (http://zone.wooyun.org/?do=action&amp;amp;act=thankcontent&amp;amp;id=633) | 2013-02-27 05:14 &amp;lt;?php function encrypt($str){ return md5(sha1(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(base64_encode(sha1(md5(sha1(base64_encode($str).base64_decode($str))))))))))))))))); } ?&amp;gt; 2# 顺子 | 2013-02-27 05:19 @safe121 你亮爆了！我草。这加</description>
    </item>
    
    <item>
      <title>cve-2012-2122-a-tragically-comedic-security-flaw-in-mysql 分析</title>
      <link>https://lcx.cc/post/2576/</link>
      <pubDate>Tue, 12 Jun 2012 09:03:15 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2576/</guid>
      <description>http://weibo.com/u/1619411912 分析的结果，我稍加补充，形成如下文章，感觉蛮清晰的 这个问题是出现在password.c文件的check_scramble 函数中的标红位置，</description>
    </item>
    
    <item>
      <title>浅析加盐散列</title>
      <link>https://lcx.cc/post/1838/</link>
      <pubDate>Tue, 18 Oct 2011 18:05:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1838/</guid>
      <description>某次某个东东的小主题。。。 主题:浅析加盐散列 作者:young 0x00 简介 本文介绍了存储用户密码的方式及其相关内容（破解、安全性分析、应用实践），介</description>
    </item>
    
    <item>
      <title>【文章】6.2 保密的多方计算 - 多方安全协议</title>
      <link>https://lcx.cc/post/986/</link>
      <pubDate>Wed, 01 Dec 2010 13:10:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/986/</guid>
      <description>6.2&amp;nbsp;保密的多方计算 &amp;nbsp;&amp;nbsp;&amp;nbsp; 保密的多方计算是一种协议，在这个协议中，一群人可在一起用一种特殊的方法计算许多变量的任何函数。这一群中的每</description>
    </item>
    
  </channel>
</rss>
