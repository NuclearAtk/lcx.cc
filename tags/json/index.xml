<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/tags/json/</link>
    <description>Recent content in JSON on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Sat, 16 Apr 2016 11:11:47 +0800</lastBuildDate><atom:link href="https://lcx.cc/tags/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>网络资产信息扫描(F-NAScan)：NAScan.py，内网渗透测试主机信息收集</title>
      <link>https://lcx.cc/post/4585/</link>
      <pubDate>Sat, 16 Apr 2016 11:11:47 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4585/</guid>
      <description>网络资产信息扫描(F-NAScan) wolf (@伏宸安全) | 2016-04-14 13:00 网络资产信息扫描 在渗透测试(特别是内网)中经常需要对目标进行网络资产收集，即对方服</description>
    </item>
    
    <item>
      <title>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS</title>
      <link>https://lcx.cc/post/4564/</link>
      <pubDate>Mon, 31 Aug 2015 15:42:37 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4564/</guid>
      <description>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS 小饼仔 | 2015-08-20 14:52 看了篇文章 Using Appcache and ServiceWorker for Evil，讲的是黑下服务器后，通过 Middlekit 技术，污染每个访问者的浏览器ca</description>
    </item>
    
    <item>
      <title>JSON应用：判断支付宝是否登录</title>
      <link>https://lcx.cc/post/4470/</link>
      <pubDate>Thu, 01 Jan 2015 19:19:33 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4470/</guid>
      <description>JSON应用：判断支付宝是否登录 专注XSS三十年 | 2014-12-31 03:16 通过JSON判断登录状态 https://lab.alipay.com/user/msgcenter/getMsgInfosNew.json?_callback=xss&amp;amp;_input_charset=utf-8&amp;amp;ctoken=222&amp;amp;_=1419965709755 已登录： zozi({&#34;popMsg&#34;:false,&#34;infos&#34;:[],&#34;totalCount&#34;:6,&#34;stat&#34;:&#34;ok&#34;,&#34;isRead&#34;:false}) 未登录： zozi({&#34;target&#34;:&#34;https://auth.alipay.com/login/index.htm?goto=&#34;,&#34;stat&#34;:&#34;deny&#34;}) 支付宝里有很多类似的JSON，虽然请求里</description>
    </item>
    
    <item>
      <title>JSON探针—定位目标网络虚拟信息身份，利用大量三方网站cookie进行追踪</title>
      <link>https://lcx.cc/post/4444/</link>
      <pubDate>Sat, 08 Nov 2014 01:22:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4444/</guid>
      <description>JSON探针—定位目标网络虚拟信息身份 Jacks | 2014-11-06 00:03 11月啦，放点东西出来 给wooyun的伙伴们分享下，其实这个技术已经很成熟啦.不过还是有不知道</description>
    </item>
    
    <item>
      <title>如何调用一个远程 js callback 并让浏览器不发送 referer？json hijack</title>
      <link>https://lcx.cc/post/4371/</link>
      <pubDate>Wed, 18 Jun 2014 08:59:57 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4371/</guid>
      <description>如何调用一个远程 js callback 并让浏览器不发送 referer? 核攻击 (统治全球，奴役全人类！毁灭任何胆敢阻拦的有机生物！) | 2014-06-17 17:36 rt? 调用远程js或callback时浏</description>
    </item>
    
    <item>
      <title>利用d3.js对大数据资料进行可视化分析</title>
      <link>https://lcx.cc/post/4176/</link>
      <pubDate>Wed, 15 Jan 2014 14:37:29 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4176/</guid>
      <description>作者: Anthr@X &amp;nbsp;anthrax@insight-labs.org 0x00 背景 对于前段时间流出的QQ群数据大家想必已经有所了解了，处理后大小将近100G，多达15亿条关系数据（QQ号，群内昵称，群号，群</description>
    </item>
    
    <item>
      <title>Attacking MongoDB</title>
      <link>https://lcx.cc/post/4170/</link>
      <pubDate>Wed, 15 Jan 2014 10:07:05 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4170/</guid>
      <description>0x00 背景 本文主要来自于HITB Ezine Issue 010中的《Attacking MongoDB》 MongoDB是一个基于分布式文件存储的数据库。由C++语言编</description>
    </item>
    
    <item>
      <title>WordPress &lt; 3.6.1 PHP 对象注入漏洞</title>
      <link>https://lcx.cc/post/3877/</link>
      <pubDate>Mon, 16 Sep 2013 10:35:19 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3877/</guid>
      <description>From:WordPress &amp;lt; 3.6.1 PHP Object Injection 0x00 背景 当我读到一篇关于Joomla的“PHP对象注射”的漏洞blog后，我挖深了一点就发现Stefan Esser大神在2010年</description>
    </item>
    
    <item>
      <title>注意，日站的时候请清理cookie或使用虚拟机，否则可被cookie追踪</title>
      <link>https://lcx.cc/post/3861/</link>
      <pubDate>Thu, 12 Sep 2013 10:57:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3861/</guid>
      <description>追踪代码 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;test&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;strong&amp;gt;It works&amp;lt;/strong&amp;gt; &amp;lt;script type=&#34;text/javascript&#34;&amp;gt; var pid = 20130906003345; var random = 60113; function GetObjString(obj) { if (typeof(obj) != &#39;object&#39;) { return obj; } var retstr = &#39;{ &#39;; for (fld in obj) { retstr += &#39;{ &#39; + fld + &#39;=&#39; + GetObjString(obj[fld]) + &#34; }\n&#34;; } retstr += &#39; }&#39;; return retstr; } function ProcessDataInner(obj, subject) { var objstr =</description>
    </item>
    
    <item>
      <title>短信炸弹，短信轰炸，利用各大网站的验证码功能批量轰炸某个号码</title>
      <link>https://lcx.cc/post/3860/</link>
      <pubDate>Thu, 12 Sep 2013 10:33:42 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3860/</guid>
      <description>短信炸弹，短信轰炸。 原理相当简单，就是利用各大网站的手机验证码（现在越来越多的网站要求手机注册了）功能，批量轰炸某个手机号码。 前几天搜集了一</description>
    </item>
    
    <item>
      <title>JSONObject输出json串可引发XSS</title>
      <link>https://lcx.cc/post/3663/</link>
      <pubDate>Mon, 08 Jul 2013 10:59:21 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3663/</guid>
      <description>测试用的是net.sf.json.JSONObject，大家也可以去试试其他JSONObject。 JSONObject json = null; json = new JSONObject(); json.put(&#34;code&#34;, 200); json.put(&#34;info&#34;, &#34;tester&#34;); json.put(&#34;msg&#34;, &#34;success&#34;); System.out.println(json); // 输出：{&#34;</description>
    </item>
    
    <item>
      <title>利用Chrome插件向指定页面植入js，劫持 XSS，一些猥琐的想法与实践</title>
      <link>https://lcx.cc/post/3653/</link>
      <pubDate>Sat, 06 Jul 2013 15:58:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3653/</guid>
      <description>0x00 Chrome插件 -------------------------- 这个想法是昨天看到@紫梦芊 的帖子想起来的。 想法如下： Chrome插件是可以通过manifest.json的控制，向指定页</description>
    </item>
    
    <item>
      <title>Json hijacking/Json劫持漏洞</title>
      <link>https://lcx.cc/post/3537/</link>
      <pubDate>Tue, 28 May 2013 14:41:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3537/</guid>
      <description>Json hijacking/Json劫持漏洞 2012/12/28 17:45 | xsser 0x00 相关背景介绍 JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。它</description>
    </item>
    
    <item>
      <title>Xiuno BBS XSS Vulnerability 简单的xss白盒分析</title>
      <link>https://lcx.cc/post/3444/</link>
      <pubDate>Thu, 25 Apr 2013 13:51:13 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3444/</guid>
      <description>前言 刷微博的时候看到到seay发个了霸气外泄的cms,官方介绍 Xiuno 这个名字来源于圣斗士星矢白羊座的黄金圣斗士修罗，他的攻击速度和战斗力是十二宫</description>
    </item>
    
    <item>
      <title>CSDN免积分下载工具 &#43; 原理讨论 &#43; 源代码 &#43; 你妹……</title>
      <link>https://lcx.cc/post/3438/</link>
      <pubDate>Tue, 23 Apr 2013 10:01:30 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3438/</guid>
      <description>CSDN免积分下载工具一枚，刚刚出炉。。。 yofx | 2013-04-20 15:22 失误。。。选了个0积分的。。。不过要积分的还是测试过了。。木有问题的 下载地址:csdn什么</description>
    </item>
    
    <item>
      <title>中国电信ADSL宽带信息泄露,可查任意IP对应的宽带账号,电话号码,上门砍人</title>
      <link>https://lcx.cc/post/3422/</link>
      <pubDate>Sat, 13 Apr 2013 13:30:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3422/</guid>
      <description>标题： 中国电信ADSL宽带信息泄露+欠费照样上网，可查任意IP对应的宽带账号、电话号码、身份证、户口本，上门砍人。 标题纯属娱乐…… 家里宽带有</description>
    </item>
    
    <item>
      <title>Ruby on Rails XML参数解析漏洞(CVE-2013-0156)</title>
      <link>https://lcx.cc/post/3268/</link>
      <pubDate>Thu, 10 Jan 2013 23:58:18 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3268/</guid>
      <description>Author: wofeiwo#80sec.com 注意，本文基本是这篇文章的中文版本，由于我水平有限，因此如果大家看的不是很明白，建议去原文查看。 近日RoR的漏洞大爆发,就在昨天临晨,R</description>
    </item>
    
    <item>
      <title>各大网站 XSS 小集合，360，Sina，163，Soku，Mop</title>
      <link>https://lcx.cc/post/3011/</link>
      <pubDate>Wed, 17 Oct 2012 09:32:15 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3011/</guid>
      <description>Author:qingsh4n Blog:http://hi.baidu.com/new/qingsh4n 360 xss 漏洞网站：http://dev.app.360.cn 漏洞重现：http://dev.app.360.cn/seriesnum/api</description>
    </item>
    
    <item>
      <title>Simple-Log 1.2 PHP 博客系统的一些漏洞</title>
      <link>https://lcx.cc/post/1156/</link>
      <pubDate>Sun, 20 Feb 2011 17:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1156/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 昨晚看了风之同学的帖子（Simple-Log 1.2PHP博客系统延迟注射漏洞），有感而发。 &amp;nbsp;&amp;nbsp;&amp;nbsp; 今天略看了一下，发现一些小漏洞。希望土司同学们</description>
    </item>
    
    <item>
      <title>【转载】反射型跨站脚本攻击的利用解析</title>
      <link>https://lcx.cc/post/457/</link>
      <pubDate>Mon, 30 Aug 2010 11:21:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/457/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 我思考了很久才把这里面的错综复杂的关系整清楚，我想很多人看我下面的paper会睡着，或者干脆“一目百行”的跳过去，但如果你真的想弄懂，请调</description>
    </item>
    
    <item>
      <title>【漏洞公布】Kindeditor遍历目录0DAY</title>
      <link>https://lcx.cc/post/143/</link>
      <pubDate>Sun, 30 May 2010 15:10:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/143/</guid>
      <description>作者：子↘仪 版本：3.4.2 介绍：KindEditor是一套开源的HTML可视化编辑器，主要用于让用户在网站上获得所见即所得编辑效果，兼容I</description>
    </item>
    
  </channel>
</rss>
