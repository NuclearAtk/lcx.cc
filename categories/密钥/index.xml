<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>密钥 on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/categories/%E5%AF%86%E9%92%A5/</link>
    <description>Recent content in 密钥 on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Sat, 06 Jul 2019 12:50:58 +0800</lastBuildDate><atom:link href="https://lcx.cc/categories/%E5%AF%86%E9%92%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rc4 加密 解密 算法 调试 测试 工具</title>
      <link>https://lcx.cc/post/4596/</link>
      <pubDate>Sat, 06 Jul 2019 12:50:58 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4596/</guid>
      <description>rc4 是一种很常见的加密算法，编程经常用到，然而之前网上找了一大圈没有顺手的，所以之前自己花了点时间写了一个小工具，十分方便好用，同时支持二进制</description>
    </item>
    
    <item>
      <title>中国黑客组织发现第二个Android万能密钥漏洞</title>
      <link>https://lcx.cc/post/3745/</link>
      <pubDate>Sat, 20 Jul 2013 10:21:34 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3745/</guid>
      <description>一个中国的安全组织Android Security Squad称他们发现了第二个万能密钥，能够在不破坏应用签名的情况下修改应用本身。 一个文件或者文档的数字签名</description>
    </item>
    
    <item>
      <title>【文章】10.2公钥密码与对称密码 密钥管理</title>
      <link>https://lcx.cc/post/1031/</link>
      <pubDate>Sun, 19 Dec 2010 02:48:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1031/</guid>
      <description>10.2 公钥密码与对称密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 公开密码与对称密码哪一个好呢？这个问题没有任何意义，但是自从公开密码体制产生以来就一直争论不休。这个争论假定两种密码算</description>
    </item>
    
    <item>
      <title>【文章】9.7 同步序列密码 密钥流 插入攻击</title>
      <link>https://lcx.cc/post/1016/</link>
      <pubDate>Sat, 11 Dec 2010 17:02:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1016/</guid>
      <description>9.7&amp;nbsp;同步序列密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 在同步序列密码中密钥流是独立于消息流而产生的。军方称之为密钥自动密钥（KAK）。加密端密钥流发生器一位接一位</description>
    </item>
    
    <item>
      <title>【文章】9.5 自同步序列密码 - 密钥流发生器</title>
      <link>https://lcx.cc/post/1014/</link>
      <pubDate>Fri, 10 Dec 2010 14:09:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1014/</guid>
      <description>9.5&amp;nbsp;自同步序列密码 &amp;nbsp;&amp;nbsp;&amp;nbsp; 自同步序列密码就是密钥流的每一位是前面固定数量密文位的函数[1378]。军方称为密文自动密钥（CTAK）。</description>
    </item>
    
    <item>
      <title>【文章】9.4 序列密码算法 - 滚动密钥发生器</title>
      <link>https://lcx.cc/post/1012/</link>
      <pubDate>Thu, 09 Dec 2010 07:18:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1012/</guid>
      <description>9.4 序列密码算法 &amp;nbsp;&amp;nbsp;&amp;nbsp; 序列密码算法将明文逐位转换成密文 。该算法最简单的应用如图9.6所示。密钥流发生器（也称为滚动密钥发生器）输出一系列比特流：K</description>
    </item>
    
    <item>
      <title>【文章】9.2 分组重放： ECB模式 密钥 加密</title>
      <link>https://lcx.cc/post/1010/</link>
      <pubDate>Wed, 08 Dec 2010 06:22:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1010/</guid>
      <description>9.2&amp;nbsp;分组重放 &amp;nbsp;&amp;nbsp; &amp;nbsp;ECB模式最严重的问题是敌人可以在不知道密钥情况下能够修改被加密过的消息，用这种办法可以欺骗指定的接</description>
    </item>
    
    <item>
      <title>【文章】8.12 公开密钥的密钥管理 密钥加密</title>
      <link>https://lcx.cc/post/1007/</link>
      <pubDate>Tue, 07 Dec 2010 16:24:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1007/</guid>
      <description>8.12&amp;nbsp;公开密钥的密钥管理 &amp;nbsp;&amp;nbsp;&amp;nbsp; 公开密钥密码使得密钥较易管理，但它有自己的问题。无论网络上有多少人，每个人只有一个公开密钥。如果Al</description>
    </item>
    
    <item>
      <title>【文章】8.11 销毁密钥 - 定期替换 磁盘切碎</title>
      <link>https://lcx.cc/post/1006/</link>
      <pubDate>Tue, 07 Dec 2010 16:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1006/</guid>
      <description>8.11&amp;nbsp;销毁密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 如果密钥必须定期替换，旧钥就必须销毁。旧密钥是有价值的，即使不再使用，有了它们，攻击者就能读到由它加密的一些旧</description>
    </item>
    
    <item>
      <title>【文章】8.10 密钥有效期 密钥破译 密文分析</title>
      <link>https://lcx.cc/post/1005/</link>
      <pubDate>Tue, 07 Dec 2010 16:10:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1005/</guid>
      <description>8.10&amp;nbsp;密钥有效期 &amp;nbsp;&amp;nbsp;&amp;nbsp; 没有哪个8.10 密钥有效期能无限期使用，它应当和护照、许可证一样能够自动失效。以下有几个原因： &amp;nbsp;&amp;nbsp;&amp;nbsp; ——密钥使用</description>
    </item>
    
    <item>
      <title>【文章】8.9 泄露密钥 对称密码 私/密钥泄露</title>
      <link>https://lcx.cc/post/1004/</link>
      <pubDate>Mon, 06 Dec 2010 07:59:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1004/</guid>
      <description>8.9&amp;nbsp;泄露密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 本书中所有的协议、技术、算法仅当在密钥（公钥体制中的私钥）保密的情况下安全，如果Alice的密钥丢失、被盗、出现</description>
    </item>
    
    <item>
      <title>【文章】8.8 备份密钥 保密规则 智能卡 密钥</title>
      <link>https://lcx.cc/post/1003/</link>
      <pubDate>Mon, 06 Dec 2010 07:55:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1003/</guid>
      <description>8.8&amp;nbsp;备份密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice是保密有限公司的首席财政官员——“我们不能告诉你我们的秘密。”像任何好的公司官员一样，她遵守公司的保密</description>
    </item>
    
    <item>
      <title>【文章】8.7 存储密钥 - 密钥碾碎技术 加密箱</title>
      <link>https://lcx.cc/post/1002/</link>
      <pubDate>Mon, 06 Dec 2010 07:52:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1002/</guid>
      <description>8.7&amp;nbsp;存储密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 最不复杂的的密钥存储问题是单用户的密钥存储， Alice加密文件以备以后用。因为只涉及她一个人，且只有她一人对密钥</description>
    </item>
    
    <item>
      <title>【文章】8.6 更新密钥 从旧密钥中产生新密钥</title>
      <link>https://lcx.cc/post/1001/</link>
      <pubDate>Sun, 05 Dec 2010 16:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1001/</guid>
      <description>8.6 更新密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 设想你每天都想改变加密的数据链路的密钥。有时，每天进行新的密钥分发的确是一件痛苦的事。更容易的解决办法是从旧的密钥中产生新的密钥</description>
    </item>
    
    <item>
      <title>【文章】8.5 使用密钥 - 控制密钥使用 存贮区</title>
      <link>https://lcx.cc/post/1000/</link>
      <pubDate>Sun, 05 Dec 2010 16:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/1000/</guid>
      <description>8.5&amp;nbsp;使用密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 软件加密是可怕的。一台微机在一种程序控制下的时代已过去了，现在有Macintosh系统7、Windows NT和U</description>
    </item>
    
    <item>
      <title>【文章】8.4 验证密钥 - 公开密钥数据库 KDC</title>
      <link>https://lcx.cc/post/999/</link>
      <pubDate>Sun, 05 Dec 2010 16:01:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/999/</guid>
      <description>8.4 验证密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; 当Bob收到密钥时，他如何知道这是Alice传送的而不是其他人伪装Alice传送的呢？如果是Alice亲自递给他的，那自然简单；</description>
    </item>
    
    <item>
      <title>【文章】8.3 发送密钥 - 大型网络的密钥分发</title>
      <link>https://lcx.cc/post/997/</link>
      <pubDate>Sat, 04 Dec 2010 12:14:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/997/</guid>
      <description>8.3&amp;nbsp;发送密钥 &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice和Bob采用对称加密算法进行保密通信：他们需要同一密钥。Alice使用随机密钥发生器生成一个密钥，然后</description>
    </item>
    
    <item>
      <title>【文章】8.2 非线性密钥空间 - 军事密码组织</title>
      <link>https://lcx.cc/post/996/</link>
      <pubDate>Sat, 04 Dec 2010 12:05:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/996/</guid>
      <description>8.2 非线性密钥空间 &amp;nbsp;&amp;nbsp;&amp;nbsp; 假设你是一个军事密码组织，为你的手下制造了一批加密设备。你想使用一个安全的算法，但又怕这些设备落入敌手。最后你想做的就是你</description>
    </item>
    
    <item>
      <title>【文章】8.1 密钥生成: 密钥的空间 字典攻击</title>
      <link>https://lcx.cc/post/995/</link>
      <pubDate>Sat, 04 Dec 2010 11:58:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/995/</guid>
      <description>8.1&amp;nbsp;密钥生成 &amp;nbsp;&amp;nbsp;&amp;nbsp; 算法的安全性依赖于密钥，如果你用一个弱的密钥生成方法，那么你的整个体制是弱的。因为能破译你的密钥生成算法，所以E</description>
    </item>
    
    <item>
      <title>【文章】7.6 总结 第八章 密钥管理 保密通信</title>
      <link>https://lcx.cc/post/994/</link>
      <pubDate>Fri, 03 Dec 2010 15:21:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/994/</guid>
      <description>7.6 总结 &amp;nbsp;&amp;nbsp;&amp;nbsp; 胡扯了整个一章。有关对未来10年计算能力的预测是十分滑稽的，更不用说50年了。那些计算仅可以理解为一个指导，仅此而已。如果说过去就是</description>
    </item>
    
    <item>
      <title>【文章】7.5 密钥应该多长 安全期 破译 保密</title>
      <link>https://lcx.cc/post/993/</link>
      <pubDate>Fri, 03 Dec 2010 15:15:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/993/</guid>
      <description>7.5&amp;nbsp;密钥应该多长 &amp;nbsp;&amp;nbsp;&amp;nbsp; 答案并不固定，它要视情况而定。为了断定你需要多高的安全性，你应该问自己一些问题：你的数据价值有多大？你的数据</description>
    </item>
    
    <item>
      <title>【文章】7.3 对称密钥和公钥密钥长度的比较</title>
      <link>https://lcx.cc/post/991/</link>
      <pubDate>Thu, 02 Dec 2010 17:18:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/991/</guid>
      <description>7.3 对称密钥和公钥密钥长度的比较 &amp;nbsp;&amp;nbsp;&amp;nbsp; 一个系统往往是在其最弱处被攻击。如果你同时用对称密钥体制算法和公开密钥算法设计一个系统，那么你应该好好选择每</description>
    </item>
    
    <item>
      <title>【文章】7.2 公钥密钥长度 - 分解 量子计算机</title>
      <link>https://lcx.cc/post/990/</link>
      <pubDate>Thu, 02 Dec 2010 17:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/990/</guid>
      <description>7.2 公钥密钥长度 &amp;nbsp;&amp;nbsp;&amp;nbsp; 2.3节中已经讨论了单向函数。例如，两个大素数进行相乘就是一个单向函数，得到相乘的结果很容易，但是由这个结果分解得到两个素数</description>
    </item>
    
    <item>
      <title>【文章】第二篇 密码技术 - 第七章 密钥长度</title>
      <link>https://lcx.cc/post/989/</link>
      <pubDate>Thu, 02 Dec 2010 16:40:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/989/</guid>
      <description>第二篇&amp;nbsp;密码技术 第七章&amp;nbsp;密钥长度 7.1 对称密钥长度 &amp;nbsp;&amp;nbsp;&amp;nbsp; 对称密码体制的安全性是算法强度和密钥长度的函数：前者更加重要而后者则更容</description>
    </item>
    
    <item>
      <title>【文章】5.8 数字证明邮件 有效收条 des密钥</title>
      <link>https://lcx.cc/post/983/</link>
      <pubDate>Tue, 30 Nov 2010 15:22:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/983/</guid>
      <description>5.8 数字证明邮件 &amp;nbsp;&amp;nbsp;&amp;nbsp; 用作签约的同时不经意传输协议也可以用于计算机证明邮件[529]，但要做一些修改。假设Alice要把一条消息送给Bob，但如果</description>
    </item>
    
    <item>
      <title>【文章】5.6 不经意签名 密钥 - 5.7 同时签约</title>
      <link>https://lcx.cc/post/982/</link>
      <pubDate>Mon, 29 Nov 2010 13:32:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/982/</guid>
      <description>5.6 不经意签名 &amp;nbsp;&amp;nbsp;&amp;nbsp; 说实话，我不认为它们好用，但是有两种类型[346]： &amp;nbsp;&amp;nbsp;&amp;nbsp; 1．Alice有n份不同的消息。Bob可以选择其中之一给Alice签名，</description>
    </item>
    
    <item>
      <title>【文章】4.14 密钥托管 密钥托管的政治 安全</title>
      <link>https://lcx.cc/post/976/</link>
      <pubDate>Sat, 27 Nov 2010 11:59:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/976/</guid>
      <description>4.14&amp;nbsp;密钥托管 &amp;nbsp;&amp;nbsp;&amp;nbsp; 下面这段话摘自Silvio Micali的专题介绍[1084]： &amp;nbsp;&amp;nbsp;&amp;nbsp; 当前，法院授权许可的搭线窃听是防止犯罪并将罪犯</description>
    </item>
    
    <item>
      <title>【文章】4.10 公平的硬币抛掷 密钥 抛币协议</title>
      <link>https://lcx.cc/post/972/</link>
      <pubDate>Fri, 26 Nov 2010 04:22:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/972/</guid>
      <description>4.10&amp;nbsp;公平的硬币抛掷 &amp;nbsp;&amp;nbsp;&amp;nbsp; 是Joe Kilian[831] 讲故事的时候了： &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice和Bob想抛掷一个公平的硬币，但又没有实际的物理硬币可抛。Alic</description>
    </item>
    
    <item>
      <title>【文章】应用密码学：多密钥公开密钥密码学</title>
      <link>https://lcx.cc/post/960/</link>
      <pubDate>Tue, 23 Nov 2010 05:30:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/960/</guid>
      <description>3.5&amp;nbsp;多密钥公开密钥密码学 &amp;nbsp;&amp;nbsp;&amp;nbsp; 公开密钥密码使用两个密钥，用一个密钥加密的报文能用另一个密钥解密。通常一个密钥是私有的，而另一个是公</description>
    </item>
    
    <item>
      <title>【文章】应用密码学：学术上的教训 - 多密钥</title>
      <link>https://lcx.cc/post/959/</link>
      <pubDate>Tue, 23 Nov 2010 05:24:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/959/</guid>
      <description>学术上的教训 &amp;nbsp;&amp;nbsp;&amp;nbsp; 在前面的协议中，那些被破译的协议和没有被破译的协议都有一些重大的教训： 因为设计者试图设计得太精巧，许多协议失败了。他们通过省去</description>
    </item>
    
    <item>
      <title>【文章】应用密码学 鉴别 密钥交换 Yahalom</title>
      <link>https://lcx.cc/post/956/</link>
      <pubDate>Mon, 22 Nov 2010 19:25:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/956/</guid>
      <description>3.3&amp;nbsp;鉴别和密钥交换 &amp;nbsp;&amp;nbsp;&amp;nbsp; 这些协议综合利用密钥交换和鉴别，解决了一般的计算机问题：Alice和Bob分别坐在网络的两端，他们想安全地</description>
    </item>
    
    <item>
      <title>【文章】应用密码学: 采用公开密钥密码 鉴别</title>
      <link>https://lcx.cc/post/955/</link>
      <pubDate>Sun, 21 Nov 2010 18:47:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/955/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 用联锁协议互相鉴别 &amp;nbsp;&amp;nbsp;&amp;nbsp; Alice和Bob是想要互相鉴别的两个用户。他们每人有一个另一人知道的通行字：Alice通行字是PA，Bob的是PB。</description>
    </item>
    
    <item>
      <title>【文章】应用密码学: 使用数字签名 密钥交换</title>
      <link>https://lcx.cc/post/953/</link>
      <pubDate>Sun, 21 Nov 2010 18:36:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/953/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; 使用数字签名的密钥交换 &amp;nbsp;&amp;nbsp;&amp;nbsp; 在会话密钥交换协议期间采用数字签名也能防止“中间人攻击”。Trent对Alice和Bob的公开密钥签名。签名的密钥</description>
    </item>
    
    <item>
      <title>【文章】应用密码学 基本协议 密钥交换 密码</title>
      <link>https://lcx.cc/post/952/</link>
      <pubDate>Sat, 20 Nov 2010 05:32:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/952/</guid>
      <description>第三章&amp;nbsp; 基本协议 3.1&amp;nbsp;密钥交换 &amp;nbsp;&amp;nbsp;&amp;nbsp; 通常的密码技术是用单独的密钥对每一次单独的会话加密，这个密钥称为会话密钥，因为它只在一</description>
    </item>
    
    <item>
      <title>【文章】应用密码学 - 公开密钥密码术的通信</title>
      <link>https://lcx.cc/post/947/</link>
      <pubDate>Fri, 19 Nov 2010 17:05:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/947/</guid>
      <description>2.5&amp;nbsp;使用公开密钥密码术的通信 &amp;nbsp;&amp;nbsp;&amp;nbsp; 对称算法可看成保险柜，密钥就是保险柜的号码组合。知道号码组合的人能够打开保险柜，放入文件，再关闭</description>
    </item>
    
  </channel>
</rss>
