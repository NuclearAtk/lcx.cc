<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>URL on Nuclear&#39;Atk（核攻击）网络安全实验室</title>
    <link>https://lcx.cc/categories/url/</link>
    <description>Recent content in URL on Nuclear&#39;Atk（核攻击）网络安全实验室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Nuclear&#39;Atk（核攻击）网络安全实验室</copyright>
    <lastBuildDate>Sun, 03 Aug 2014 09:38:40 +0800</lastBuildDate><atom:link href="https://lcx.cc/categories/url/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>黑帽SEO：IP变种繁殖原理，黑帽 SEO IP 站群、IP URL、畸形变异 IP 域名</title>
      <link>https://lcx.cc/post/4409/</link>
      <pubDate>Sun, 03 Aug 2014 09:38:40 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4409/</guid>
      <description>看到很多人都再求这个。我就把原理贴出来，其实有工具不如懂原理的好。 ip转换原理 根据TCP/IP协议，IP地址是以二进制来表示，目前广泛使用的</description>
    </item>
    
    <item>
      <title>python爬取所有厂商url&amp;python爬取Google搜索结果产生的猥琐想法</title>
      <link>https://lcx.cc/post/4342/</link>
      <pubDate>Sat, 24 May 2014 11:02:55 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4342/</guid>
      <description>一直有这么一个想法。当得到某0day，我怎样才能最快知道在某大厂商的任意子域名、任意端口下是否存在此漏洞。 于是猥琐的想法就产生了，首先得到乌</description>
    </item>
    
    <item>
      <title>URL Hacking - 前端猥琐流</title>
      <link>https://lcx.cc/post/4095/</link>
      <pubDate>Tue, 17 Dec 2013 14:56:33 +0800</pubDate>
      
      <guid>https://lcx.cc/post/4095/</guid>
      <description>0x00 目录 0x01 链接的构成 0x02 浏览器算如何对url进行解析的 0x03 链接真的只能是这样固定的格式么？ 0x04 链接真的是你看到的那样么？ 0x01 链接的构成 链接真的只能固定</description>
    </item>
    
    <item>
      <title>Browser Security-同源策略、伪URL的域</title>
      <link>https://lcx.cc/post/3642/</link>
      <pubDate>Tue, 02 Jul 2013 10:41:18 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3642/</guid>
      <description>同源策略 同源策略的文档模型 同源策略（Same Origin policy，SOP），也称为单源策略（Single Origin policy），它是一种用于Web浏览器</description>
    </item>
    
    <item>
      <title>由参数URL想到的</title>
      <link>https://lcx.cc/post/3640/</link>
      <pubDate>Tue, 02 Jul 2013 10:09:37 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3640/</guid>
      <description>0x00 抛砖引玉 当你看到一个参数的值是url的时候你会想到什么？ 结合wooyun里的案例看，可能产生的危害分为三方面： 1、url重定向跳转漏洞 2、</description>
    </item>
    
    <item>
      <title>URL重定向/跳转漏洞</title>
      <link>https://lcx.cc/post/3539/</link>
      <pubDate>Tue, 28 May 2013 15:33:45 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3539/</guid>
      <description>0x00 相关背景介绍 由于应用越来越多的需要和其他的第三方应用交互，以及在自身应用内部根据不同的逻辑将用户引向到不同的页面，譬如一个典型的登录接口就</description>
    </item>
    
    <item>
      <title>Http Authentication Url and csrf = Router Hacking, Csrf入侵内网路由器</title>
      <link>https://lcx.cc/post/3516/</link>
      <pubDate>Wed, 22 May 2013 09:08:05 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3516/</guid>
      <description>Http Authentication Url and csrf = Router Hacking !!!，Csrf入侵内网路由器。 2011-09-14 00:09 Http Authentication Url and csrf = Router Hacking !!! 首先简要的说下什么是Http Authentication，服务端返回一</description>
    </item>
    
    <item>
      <title>通过 img URL 实施 XSS 的解决方案</title>
      <link>https://lcx.cc/post/3138/</link>
      <pubDate>Sun, 09 Dec 2012 20:50:13 +0800</pubDate>
      
      <guid>https://lcx.cc/post/3138/</guid>
      <description>今天在整理一些 js，9月份的时候给百姓网支持了 markdown，但 UGC 的自由意味着我们要做一些保持措施，比如防 XSS 攻击。翻到了9月初写的一篇邮件</description>
    </item>
    
    <item>
      <title>src, href 等 url 类属性的妙用</title>
      <link>https://lcx.cc/post/2616/</link>
      <pubDate>Thu, 28 Jun 2012 08:39:03 +0800</pubDate>
      
      <guid>https://lcx.cc/post/2616/</guid>
      <description>src, href等url类属性拥有一个神奇的隐藏功能，就是可以直接修改页面的html。 先举个小例子，在当前页面执行如下代码： javascript: window.location.href = &#39;javascript: &#34;&amp;lt;!-</description>
    </item>
    
    <item>
      <title>【Html】Html Java 脚本执行Url地址,网址跳转</title>
      <link>https://lcx.cc/post/904/</link>
      <pubDate>Sun, 07 Nov 2010 13:38:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/904/</guid>
      <description>Html Java 脚本执行Url地址、网址的跳转： &amp;lt;script language=&#34;javascript&#34; type=&#34;text/javascript&#34;&amp;gt; location.href=&#34;http://www.baidu.com/&#34;; &amp;lt;/script&amp;gt; So easy, Do not explain…… &amp;nbsp;&amp;nbsp;&amp;nbsp; Html Java 脚本执行Url地址、网址的跳转，Html Java 脚本执行Url地址的</description>
    </item>
    
    <item>
      <title>【VBS】vbs下载指定url地址exe文件并运行命令</title>
      <link>https://lcx.cc/post/852/</link>
      <pubDate>Thu, 28 Oct 2010 15:20:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/852/</guid>
      <description>VBS 下载指定URL地址EXE文件并运行命令： set xPost = createObject(&#34;Microsoft.XMLHTTP&#34;) xPost.Open &#34;GET&#34;,&#34;http://down.360safe.com/setup.exe&#34;,0 xPost.Send() Set sGet = createObject(&#34;ADODB.Stream&#34;) sGet.Mode = 3 sGet.Type = 1 sGet.Open() sGet.Write(xPost.responseBody) sGet.SaveToFile &#34;rose.exe&#34; Set ws = CreateObject(&#34;Wscript.Shell&#34;) ws.run &#34;rose.exe&#34; msgbox &#34;360安全卫士更新完毕!&#34;,vbyes,</description>
    </item>
    
    <item>
      <title>【Html】Js Script判断访问来路并跳转指定到url</title>
      <link>https://lcx.cc/post/848/</link>
      <pubDate>Wed, 27 Oct 2010 13:08:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/848/</guid>
      <description>Js Script 判断访问来路并跳转指定到Url，Seo作弊用的： &amp;lt;script&amp;gt; //下拉菜单相关代码 &amp;nbsp;var h; &amp;nbsp;var w; &amp;nbsp;var l; &amp;nbsp;var t; &amp;nbsp;var topMar = 1; &amp;nbsp;var leftMar = -2; &amp;nbsp;var space = 1; &amp;nbsp;var isvisible; &amp;nbsp;var MENU_SHADO</description>
    </item>
    
    <item>
      <title>【PHP】PHP 获取指定网站、网页、URL 的标题</title>
      <link>https://lcx.cc/post/769/</link>
      <pubDate>Wed, 13 Oct 2010 08:53:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/769/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; PHP 获取指定网站、网页、URL 的&amp;lt;head&amp;gt;标题，PHP 获取指定网站、网页、URL 的&amp;lt;head&amp;gt;，PHP 获取指定网站</description>
    </item>
    
    <item>
      <title>【PHP】获取指定网站、网页、URL Html源代码</title>
      <link>https://lcx.cc/post/767/</link>
      <pubDate>Wed, 13 Oct 2010 08:39:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/767/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; PHP 获取指定网站、网页、URL 的 Html 源代码，PHP 获取指定网站的 Html 源代码，PHP 获取指定网站 Html 源代码，PHP 取指定网站的 Html 源代码，PHP 获取网</description>
    </item>
    
    <item>
      <title>【VB技巧】VB URL编码与解码 URL加密与解密</title>
      <link>https://lcx.cc/post/624/</link>
      <pubDate>Thu, 23 Sep 2010 12:29:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/624/</guid>
      <description>&amp;nbsp;&amp;nbsp;&amp;nbsp; VB URL 编码与解码，VB URL 加密与解密，VB URL 编码，VB URL 加密，VB URL 解码，VB URL 解密，VB UrlEncoding，VB URLDecode。 VB URL</description>
    </item>
    
    <item>
      <title>【Asp】ASP读取网址/Url列表并随机跳转</title>
      <link>https://lcx.cc/post/562/</link>
      <pubDate>Thu, 16 Sep 2010 12:02:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/562/</guid>
      <description>ASP读取网址/Url列表并随机跳转： &amp;lt;% File=Server.Mappath(&#34;UrlList.txt&#34;) &#39;网址列表路径 Set Fs=server.CreateObject(&#34;Scripting.FileSystemObject&#34;) &#39;Fso读写组件 Set Txt=Fs.Opentextfile(file,1,true) &#39;打开 If Not Txt.Atendofstream Then P=Split(txt.readall, vbcrlf) &#39;分割为数组 Randomize &#39;纯随机,不重复 Response.redirect P(Int((UBound(P) * Rnd) + 1)-1)</description>
    </item>
    
    <item>
      <title>【Asp】ASP Url编码 URL编码为UTF-8格式</title>
      <link>https://lcx.cc/post/527/</link>
      <pubDate>Sat, 11 Sep 2010 12:37:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/527/</guid>
      <description>ASP 将URL编码为UTF-8格式： Function&amp;nbsp;URLEncodetoUTF8(url) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Dim&amp;nbsp;oneChar,&amp;nbsp;result&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Dim&amp;nbsp;oneAsc&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;url&amp;nbsp;=&amp;nbsp;&#34;&#34;&amp;nbsp;Then &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URLEncodetoUTF8&amp;nbsp;=&amp;nbsp;url &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Exit&amp;nbsp;Function &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;End&amp;nbsp;If &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For&amp;nbsp;i&amp;nbsp;=&amp;nbsp;1&amp;nbsp;To&amp;nbsp;Len(url) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oneChar&amp;nbsp;=&amp;nbsp;Mid(url,i,&amp;nbsp;1) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oneAsc&amp;nbsp;=&amp;nbsp;AscW(oneChar) &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;oneAsc&amp;nbsp;&amp;lt;&amp;nbsp;0&amp;nbsp;Then&amp;nbsp;oneAsc&amp;nbsp;=&amp;nbsp;oneAsc&amp;nbsp;+&amp;nbsp;65536 &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;(oneAsc&amp;nbsp;And&amp;nbsp;&amp;amp;HFF80)&amp;nbsp;=&amp;nbsp;0&amp;nbsp;Then &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;(oneAsc&amp;nbsp;&amp;gt;=&amp;nbsp;65&amp;nbsp;And&amp;nbsp;oneAsc&amp;nbsp;&amp;lt;=&amp;nbsp;90)&amp;nbsp;or&amp;nbsp;(oneAsc&amp;nbsp;&amp;gt;=&amp;nbsp;97&amp;nbsp;And&amp;nbsp;oneAsc&amp;nbsp;&amp;lt;=&amp;nbsp;122)&amp;nbsp;or&amp;nbsp;(oneAsc&amp;nbsp;&amp;gt;=&amp;nbsp;48&amp;nbsp;And&amp;nbsp;oneAsc&amp;nbsp;&amp;lt;=&amp;nbsp;57)&amp;nbsp;or&amp;nbsp;oneAsc&amp;nbsp;=&amp;nbsp;45&amp;nbsp;or&amp;nbsp;oneAsc&amp;nbsp;=&amp;nbsp;46&amp;nbsp;or&amp;nbsp;oneAsc&amp;nbsp;=&amp;nbsp;95&amp;nbsp;Then&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;&amp;amp;&amp;nbsp;oneChar&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Else&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;&amp;amp;&amp;nbsp;&#34;%&#34;&amp;nbsp;&amp;amp;&amp;nbsp;Hex(oneAsc)&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;End&amp;nbsp;If&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Else &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If&amp;nbsp;(oneAsc&amp;nbsp;And&amp;nbsp;&amp;amp;HF000)&amp;nbsp;=&amp;nbsp;0&amp;nbsp;Then &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uch&amp;nbsp;=&amp;nbsp;&#34;%&#34;&amp;nbsp;&amp;amp;&amp;nbsp;Hex(((oneAsc&amp;nbsp;\&amp;nbsp;2&amp;nbsp;^&amp;nbsp;6))&amp;nbsp;or&amp;nbsp;&amp;amp;HC0)&amp;nbsp;&amp;amp;&amp;nbsp;Hex(oneAsc&amp;nbsp;And&amp;nbsp;&amp;amp;H3F&amp;nbsp;or&amp;nbsp;&amp;amp;H80) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;&amp;amp;&amp;nbsp;uch &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Else &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uch&amp;nbsp;=&amp;nbsp;&#34;%&#34;&amp;nbsp;&amp;amp;&amp;nbsp;Hex((oneAsc&amp;nbsp;\&amp;nbsp;2&amp;nbsp;^&amp;nbsp;12)&amp;nbsp;or&amp;nbsp;&amp;amp;HE0)&amp;nbsp;&amp;amp;&amp;nbsp;&#34;%&#34;&amp;nbsp;&amp;amp;&amp;nbsp;_ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hex((oneAsc&amp;nbsp;\&amp;nbsp;2&amp;nbsp;^&amp;nbsp;6)&amp;nbsp;And&amp;nbsp;&amp;amp;H3F&amp;nbsp;or&amp;nbsp;&amp;amp;H80)&amp;nbsp;&amp;amp;&amp;nbsp;&#34;%&#34;&amp;nbsp;&amp;amp;&amp;nbsp;_ &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Hex(oneAsc&amp;nbsp;And&amp;nbsp;&amp;amp;H3F&amp;nbsp;or&amp;nbsp;&amp;amp;H80) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;result&amp;nbsp;&amp;amp;&amp;nbsp;uch &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;End&amp;nbsp;If &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;End&amp;nbsp;If &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Next&amp;nbsp; URLEncodetoUTF8&amp;nbsp;=&amp;nbsp;result End&amp;nbsp;Function</description>
    </item>
    
    <item>
      <title>【Asp】Asp Url编码和解码(16进制编/解码)</title>
      <link>https://lcx.cc/post/523/</link>
      <pubDate>Fri, 10 Sep 2010 14:32:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/523/</guid>
      <description>Asp Url编码和解码(16进制编码和解码)： &amp;lt;% function&amp;nbsp;urldecoding(vstrin)&amp;nbsp;&#39;URl解码 &#39;qiushuiwuhen(2002-6-19) &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;dim&amp;nbsp;i,strreturn,strSpecial &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strSpecial&amp;nbsp;=&amp;nbsp;&#34;!&#34;&#34;#$%&amp;amp;&#39;()*+,/:;&amp;lt;=&amp;gt;?@[\]^`{|}~%&#34;</description>
    </item>
    
    <item>
      <title>【漏洞】酷狗存在严重的XSS和Url跳转漏洞</title>
      <link>https://lcx.cc/post/448/</link>
      <pubDate>Fri, 27 Aug 2010 03:47:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/448/</guid>
      <description>博主补充： &amp;nbsp;&amp;nbsp;&amp;nbsp; 你就没有测试一下发图片的地方么？非要搞得那么复杂。哎~ &amp;nbsp;&amp;nbsp;&amp;nbsp; 哎，这种垃圾漏洞，哎，不想多说什么了，太简单了： &amp;nbsp;&amp;nbsp;&amp;nbsp; 同时演示XSS和Url</description>
    </item>
    
    <item>
      <title>【漏洞】百度新闻url处理bug 可引发漏洞</title>
      <link>https://lcx.cc/post/358/</link>
      <pubDate>Wed, 28 Jul 2010 14:28:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/358/</guid>
      <description>昨天浏览新闻时，在百度新闻发现如下缺陷： 正常页面： http://news.baidu.com/n?cmd=2&amp;amp;class=civilnews&amp;amp;page=http://cqqj.cqnews.net/qjxwzx/qjzhxw/201007/t20100727_4497301.htm&amp;amp;cls=civilnews &amp;nbsp; Bug页面(在url后提交“%23”即Url编码(十六进制)的“#”号)： http://news.baidu.com/n?cmd=2&amp;amp;class=civilnews&amp;amp;page=http://cqqj.cqnews.net/qjxwzx/qjzhxw/201007/t20100727_4497301.htm%23&amp;amp;cls=civilnews 效果：会产</description>
    </item>
    
    <item>
      <title>【漏洞】51.la(我要啦)url跳转漏洞</title>
      <link>https://lcx.cc/post/357/</link>
      <pubDate>Wed, 28 Jul 2010 14:24:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/357/</guid>
      <description>相信51.la很多站长都用吧，前几天无意间点击其上方的广告，发现了这个： 漏洞演示：http://www.51.la/user/click.a</description>
    </item>
    
    <item>
      <title>【电脑技巧】畸形网址(URL)，会说谎的URL地址</title>
      <link>https://lcx.cc/post/127/</link>
      <pubDate>Tue, 25 May 2010 13:46:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/127/</guid>
      <description>会说谎的URL地址，URL加密，网址加密，畸形网址，畸形URL，16进制URl，10进制URL。 我叫URL，即“Uniform Resource Locato</description>
    </item>
    
    <item>
      <title>【VB技巧】VB URL编码与解码</title>
      <link>https://lcx.cc/post/125/</link>
      <pubDate>Tue, 25 May 2010 04:45:00 +0800</pubDate>
      
      <guid>https://lcx.cc/post/125/</guid>
      <description>VB URL编码与解码 网上搜到的基本都有问题，编码不正常。这个是自己修改过的完全正常。 Public Function UrlEncoding(StrX As String) As String &#39;URL编码 On Error GoTo over Dim i, StrReturn As String, Thischr, Innercode &amp;nbsp;&amp;nbsp;&amp;nbsp; StrReturn = &#34;&#34; &amp;nbsp;&amp;nbsp;&amp;nbsp;</description>
    </item>
    
  </channel>
</rss>
